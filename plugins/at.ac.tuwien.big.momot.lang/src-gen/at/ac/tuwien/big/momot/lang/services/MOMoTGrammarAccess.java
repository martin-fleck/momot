/*
 * generated by Xtext
 */
package at.ac.tuwien.big.momot.lang.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.xbase.services.XbaseGrammarAccess;
import org.eclipse.xtext.xbase.services.XtypeGrammarAccess;

@Singleton
public class MOMoTGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class MOMoTSearchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.MOMoTSearch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cPackageKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cPackageAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cPackageQualifiedNameParserRuleCall_0_1_0 = (RuleCall)cPackageAssignment_0_1.eContents().get(0);
		private final Assignment cImportSectionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportSectionXImportSectionParserRuleCall_1_0 = (RuleCall)cImportSectionAssignment_1.eContents().get(0);
		private final Assignment cVariablesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVariablesVariableDeclarationParserRuleCall_2_0 = (RuleCall)cVariablesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cInitializationKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Assignment cInitializationAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cInitializationXBlockExpressionParserRuleCall_3_2_0 = (RuleCall)cInitializationAssignment_3_2.eContents().get(0);
		private final Keyword cSearchKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameValidIDParserRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Assignment cSearchOrchestrationAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cSearchOrchestrationSearchOrchestrationParserRuleCall_7_0 = (RuleCall)cSearchOrchestrationAssignment_7.eContents().get(0);
		private final Keyword cExperimentKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final RuleCall cOpSingleAssignParserRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Assignment cExperimentOrchestrationAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cExperimentOrchestrationExperimentOrchestrationParserRuleCall_10_0 = (RuleCall)cExperimentOrchestrationAssignment_10.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cAnalysisKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_11_1 = (RuleCall)cGroup_11.eContents().get(1);
		private final Assignment cAnalysisOrchestrationAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cAnalysisOrchestrationAnalysisOrchestrationParserRuleCall_11_2_0 = (RuleCall)cAnalysisOrchestrationAssignment_11_2.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cResultsKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_12_1 = (RuleCall)cGroup_12.eContents().get(1);
		private final Assignment cResultManagementAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cResultManagementResultManagementParserRuleCall_12_2_0 = (RuleCall)cResultManagementAssignment_12_2.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cFinalizationKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_13_1 = (RuleCall)cGroup_13.eContents().get(1);
		private final Assignment cFinalizationAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cFinalizationXBlockExpressionParserRuleCall_13_2_0 = (RuleCall)cFinalizationAssignment_13_2.eContents().get(0);
		
		//MOMoTSearch:
		//	("package" package=QualifiedName)?
		//	importSection=XImportSection?
		//	variables+=VariableDeclaration* ("initialization" OpSingleAssign initialization=XBlockExpression)?
		//	"search" name=ValidID? OpSingleAssign searchOrchestration=SearchOrchestration
		//	"experiment" OpSingleAssign experimentOrchestration=ExperimentOrchestration ("analysis" OpSingleAssign
		//	analysisOrchestration=AnalysisOrchestration)? ("results" OpSingleAssign resultManagement=ResultManagement)?
		//	("finalization" OpSingleAssign finalization=XBlockExpression)?;
		@Override public ParserRule getRule() { return rule; }

		//("package" package=QualifiedName)? importSection=XImportSection? variables+=VariableDeclaration* ("initialization"
		//OpSingleAssign initialization=XBlockExpression)? "search" name=ValidID? OpSingleAssign
		//searchOrchestration=SearchOrchestration "experiment" OpSingleAssign experimentOrchestration=ExperimentOrchestration
		//("analysis" OpSingleAssign analysisOrchestration=AnalysisOrchestration)? ("results" OpSingleAssign
		//resultManagement=ResultManagement)? ("finalization" OpSingleAssign finalization=XBlockExpression)?
		public Group getGroup() { return cGroup; }

		//("package" package=QualifiedName)?
		public Group getGroup_0() { return cGroup_0; }

		//"package"
		public Keyword getPackageKeyword_0_0() { return cPackageKeyword_0_0; }

		//package=QualifiedName
		public Assignment getPackageAssignment_0_1() { return cPackageAssignment_0_1; }

		//QualifiedName
		public RuleCall getPackageQualifiedNameParserRuleCall_0_1_0() { return cPackageQualifiedNameParserRuleCall_0_1_0; }

		//importSection=XImportSection?
		public Assignment getImportSectionAssignment_1() { return cImportSectionAssignment_1; }

		//XImportSection
		public RuleCall getImportSectionXImportSectionParserRuleCall_1_0() { return cImportSectionXImportSectionParserRuleCall_1_0; }

		//variables+=VariableDeclaration*
		public Assignment getVariablesAssignment_2() { return cVariablesAssignment_2; }

		//VariableDeclaration
		public RuleCall getVariablesVariableDeclarationParserRuleCall_2_0() { return cVariablesVariableDeclarationParserRuleCall_2_0; }

		//("initialization" OpSingleAssign initialization=XBlockExpression)?
		public Group getGroup_3() { return cGroup_3; }

		//"initialization"
		public Keyword getInitializationKeyword_3_0() { return cInitializationKeyword_3_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_3_1() { return cOpSingleAssignParserRuleCall_3_1; }

		//initialization=XBlockExpression
		public Assignment getInitializationAssignment_3_2() { return cInitializationAssignment_3_2; }

		//XBlockExpression
		public RuleCall getInitializationXBlockExpressionParserRuleCall_3_2_0() { return cInitializationXBlockExpressionParserRuleCall_3_2_0; }

		//"search"
		public Keyword getSearchKeyword_4() { return cSearchKeyword_4; }

		//name=ValidID?
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_5_0() { return cNameValidIDParserRuleCall_5_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_6() { return cOpSingleAssignParserRuleCall_6; }

		//searchOrchestration=SearchOrchestration
		public Assignment getSearchOrchestrationAssignment_7() { return cSearchOrchestrationAssignment_7; }

		//SearchOrchestration
		public RuleCall getSearchOrchestrationSearchOrchestrationParserRuleCall_7_0() { return cSearchOrchestrationSearchOrchestrationParserRuleCall_7_0; }

		//"experiment"
		public Keyword getExperimentKeyword_8() { return cExperimentKeyword_8; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_9() { return cOpSingleAssignParserRuleCall_9; }

		//experimentOrchestration=ExperimentOrchestration
		public Assignment getExperimentOrchestrationAssignment_10() { return cExperimentOrchestrationAssignment_10; }

		//ExperimentOrchestration
		public RuleCall getExperimentOrchestrationExperimentOrchestrationParserRuleCall_10_0() { return cExperimentOrchestrationExperimentOrchestrationParserRuleCall_10_0; }

		//("analysis" OpSingleAssign analysisOrchestration=AnalysisOrchestration)?
		public Group getGroup_11() { return cGroup_11; }

		//"analysis"
		public Keyword getAnalysisKeyword_11_0() { return cAnalysisKeyword_11_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_11_1() { return cOpSingleAssignParserRuleCall_11_1; }

		//analysisOrchestration=AnalysisOrchestration
		public Assignment getAnalysisOrchestrationAssignment_11_2() { return cAnalysisOrchestrationAssignment_11_2; }

		//AnalysisOrchestration
		public RuleCall getAnalysisOrchestrationAnalysisOrchestrationParserRuleCall_11_2_0() { return cAnalysisOrchestrationAnalysisOrchestrationParserRuleCall_11_2_0; }

		//("results" OpSingleAssign resultManagement=ResultManagement)?
		public Group getGroup_12() { return cGroup_12; }

		//"results"
		public Keyword getResultsKeyword_12_0() { return cResultsKeyword_12_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_12_1() { return cOpSingleAssignParserRuleCall_12_1; }

		//resultManagement=ResultManagement
		public Assignment getResultManagementAssignment_12_2() { return cResultManagementAssignment_12_2; }

		//ResultManagement
		public RuleCall getResultManagementResultManagementParserRuleCall_12_2_0() { return cResultManagementResultManagementParserRuleCall_12_2_0; }

		//("finalization" OpSingleAssign finalization=XBlockExpression)?
		public Group getGroup_13() { return cGroup_13; }

		//"finalization"
		public Keyword getFinalizationKeyword_13_0() { return cFinalizationKeyword_13_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_13_1() { return cOpSingleAssignParserRuleCall_13_1; }

		//finalization=XBlockExpression
		public Assignment getFinalizationAssignment_13_2() { return cFinalizationAssignment_13_2; }

		//XBlockExpression
		public RuleCall getFinalizationXBlockExpressionParserRuleCall_13_2_0() { return cFinalizationXBlockExpressionParserRuleCall_13_2_0; }
	}

	public class OpKeyAssignElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.OpKeyAssign");
		private final Keyword cColonKeyword = (Keyword)rule.eContents().get(1);
		
		//OpKeyAssign:
		//	":";
		@Override public ParserRule getRule() { return rule; }

		//":"
		public Keyword getColonKeyword() { return cColonKeyword; }
	}

	public class VariableDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.VariableDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cOpSingleAssignParserRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cInitAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cInitXExpressionParserRuleCall_3_1_0 = (RuleCall)cInitAssignment_3_1.eContents().get(0);
		
		//VariableDeclaration:
		//	"var" type=JvmTypeReference? name=ValidID (OpSingleAssign init=XExpression)?;
		@Override public ParserRule getRule() { return rule; }

		//"var" type=JvmTypeReference? name=ValidID (OpSingleAssign init=XExpression)?
		public Group getGroup() { return cGroup; }

		//"var"
		public Keyword getVarKeyword_0() { return cVarKeyword_0; }

		//type=JvmTypeReference?
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_1_0() { return cTypeJvmTypeReferenceParserRuleCall_1_0; }

		//name=ValidID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0() { return cNameValidIDParserRuleCall_2_0; }

		//(OpSingleAssign init=XExpression)?
		public Group getGroup_3() { return cGroup_3; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_3_0() { return cOpSingleAssignParserRuleCall_3_0; }

		//init=XExpression
		public Assignment getInitAssignment_3_1() { return cInitAssignment_3_1; }

		//XExpression
		public RuleCall getInitXExpressionParserRuleCall_3_1_0() { return cInitXExpressionParserRuleCall_3_1_0; }
	}

	public class ArrayLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.ArrayLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cXListLiteralAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cElementsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cElementsXExpressionParserRuleCall_2_0 = (RuleCall)cElementsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cElementsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cElementsXExpressionParserRuleCall_3_1_0 = (RuleCall)cElementsAssignment_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ArrayLiteral xbase::XListLiteral:
		//	{xbase::XListLiteral}
		//	'[' elements+=XExpression (',' elements+=XExpression)* ']';
		@Override public ParserRule getRule() { return rule; }

		//{xbase::XListLiteral} '[' elements+=XExpression (',' elements+=XExpression)* ']'
		public Group getGroup() { return cGroup; }

		//{xbase::XListLiteral}
		public Action getXListLiteralAction_0() { return cXListLiteralAction_0; }

		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//elements+=XExpression
		public Assignment getElementsAssignment_2() { return cElementsAssignment_2; }

		//XExpression
		public RuleCall getElementsXExpressionParserRuleCall_2_0() { return cElementsXExpressionParserRuleCall_2_0; }

		//(',' elements+=XExpression)*
		public Group getGroup_3() { return cGroup_3; }

		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//elements+=XExpression
		public Assignment getElementsAssignment_3_1() { return cElementsAssignment_3_1; }

		//XExpression
		public RuleCall getElementsXExpressionParserRuleCall_3_1_0() { return cElementsXExpressionParserRuleCall_3_1_0; }

		//']'
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class ModuleOrchestrationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.ModuleOrchestration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cModulesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOpSingleAssignParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cModulesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cModulesArrayLiteralParserRuleCall_3_0 = (RuleCall)cModulesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cIgnoreUnitsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Assignment cUnitsToRemoveAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cUnitsToRemoveArrayLiteralParserRuleCall_4_2_0 = (RuleCall)cUnitsToRemoveAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cIgnoreParametersKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final Assignment cNonSolutionParametersAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cNonSolutionParametersArrayLiteralParserRuleCall_5_2_0 = (RuleCall)cNonSolutionParametersAssignment_5_2.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cParameterValuesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cParameterValuesAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final RuleCall cParameterValuesParmeterValueSpecificationParserRuleCall_6_3_0 = (RuleCall)cParameterValuesAssignment_6_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ModuleOrchestration:
		//	"{"
		//	"modules" OpSingleAssign modules=ArrayLiteral ("ignoreUnits" OpSingleAssign unitsToRemove=ArrayLiteral)?
		//	("ignoreParameters" OpSingleAssign nonSolutionParameters=ArrayLiteral)? ("parameterValues" OpSingleAssign "{"
		//	parameterValues+=ParmeterValueSpecification*
		//	"}")?
		//	"}";
		@Override public ParserRule getRule() { return rule; }

		//"{" "modules" OpSingleAssign modules=ArrayLiteral ("ignoreUnits" OpSingleAssign unitsToRemove=ArrayLiteral)?
		//("ignoreParameters" OpSingleAssign nonSolutionParameters=ArrayLiteral)? ("parameterValues" OpSingleAssign "{"
		//parameterValues+=ParmeterValueSpecification* "}")? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"modules"
		public Keyword getModulesKeyword_1() { return cModulesKeyword_1; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_2() { return cOpSingleAssignParserRuleCall_2; }

		//modules=ArrayLiteral
		public Assignment getModulesAssignment_3() { return cModulesAssignment_3; }

		//ArrayLiteral
		public RuleCall getModulesArrayLiteralParserRuleCall_3_0() { return cModulesArrayLiteralParserRuleCall_3_0; }

		//("ignoreUnits" OpSingleAssign unitsToRemove=ArrayLiteral)?
		public Group getGroup_4() { return cGroup_4; }

		//"ignoreUnits"
		public Keyword getIgnoreUnitsKeyword_4_0() { return cIgnoreUnitsKeyword_4_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_4_1() { return cOpSingleAssignParserRuleCall_4_1; }

		//unitsToRemove=ArrayLiteral
		public Assignment getUnitsToRemoveAssignment_4_2() { return cUnitsToRemoveAssignment_4_2; }

		//ArrayLiteral
		public RuleCall getUnitsToRemoveArrayLiteralParserRuleCall_4_2_0() { return cUnitsToRemoveArrayLiteralParserRuleCall_4_2_0; }

		//("ignoreParameters" OpSingleAssign nonSolutionParameters=ArrayLiteral)?
		public Group getGroup_5() { return cGroup_5; }

		//"ignoreParameters"
		public Keyword getIgnoreParametersKeyword_5_0() { return cIgnoreParametersKeyword_5_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_5_1() { return cOpSingleAssignParserRuleCall_5_1; }

		//nonSolutionParameters=ArrayLiteral
		public Assignment getNonSolutionParametersAssignment_5_2() { return cNonSolutionParametersAssignment_5_2; }

		//ArrayLiteral
		public RuleCall getNonSolutionParametersArrayLiteralParserRuleCall_5_2_0() { return cNonSolutionParametersArrayLiteralParserRuleCall_5_2_0; }

		//("parameterValues" OpSingleAssign "{" parameterValues+=ParmeterValueSpecification* "}")?
		public Group getGroup_6() { return cGroup_6; }

		//"parameterValues"
		public Keyword getParameterValuesKeyword_6_0() { return cParameterValuesKeyword_6_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_6_1() { return cOpSingleAssignParserRuleCall_6_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6_2() { return cLeftCurlyBracketKeyword_6_2; }

		//parameterValues+=ParmeterValueSpecification*
		public Assignment getParameterValuesAssignment_6_3() { return cParameterValuesAssignment_6_3; }

		//ParmeterValueSpecification
		public RuleCall getParameterValuesParmeterValueSpecificationParserRuleCall_6_3_0() { return cParameterValuesParmeterValueSpecificationParserRuleCall_6_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class ParmeterValueSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.ParmeterValueSpecification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParmeterValueSpecificationAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameXExpressionParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final RuleCall cOpKeyAssignParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cCallAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCallXConstructorCallParserRuleCall_3_0 = (RuleCall)cCallAssignment_3.eContents().get(0);
		
		//ParmeterValueSpecification:
		//	{ParmeterValueSpecification} name=XExpression OpKeyAssign call=XConstructorCall;
		@Override public ParserRule getRule() { return rule; }

		//{ParmeterValueSpecification} name=XExpression OpKeyAssign call=XConstructorCall
		public Group getGroup() { return cGroup; }

		//{ParmeterValueSpecification}
		public Action getParmeterValueSpecificationAction_0() { return cParmeterValueSpecificationAction_0; }

		//name=XExpression
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//XExpression
		public RuleCall getNameXExpressionParserRuleCall_1_0() { return cNameXExpressionParserRuleCall_1_0; }

		//OpKeyAssign
		public RuleCall getOpKeyAssignParserRuleCall_2() { return cOpKeyAssignParserRuleCall_2; }

		//call=XConstructorCall
		public Assignment getCallAssignment_3() { return cCallAssignment_3; }

		//XConstructorCall
		public RuleCall getCallXConstructorCallParserRuleCall_3_0() { return cCallXConstructorCallParserRuleCall_3_0; }
	}

	public class SearchOrchestrationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.SearchOrchestration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSearchOrchestrationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cModelKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cOpSingleAssignParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cModelAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cModelInputModelParserRuleCall_4_0 = (RuleCall)cModelAssignment_4.eContents().get(0);
		private final Keyword cSolutionLengthKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final RuleCall cOpSingleAssignParserRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Assignment cSolutionLengthAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cSolutionLengthXExpressionParserRuleCall_7_0 = (RuleCall)cSolutionLengthAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cEmptyInitializationKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_8_1 = (RuleCall)cGroup_8.eContents().get(1);
		private final Alternatives cAlternatives_8_2 = (Alternatives)cGroup_8.eContents().get(2);
		private final Assignment cEmptyInitializationAssignment_8_2_0 = (Assignment)cAlternatives_8_2.eContents().get(0);
		private final Keyword cEmptyInitializationTrueKeyword_8_2_0_0 = (Keyword)cEmptyInitializationAssignment_8_2_0.eContents().get(0);
		private final Keyword cFalseKeyword_8_2_1 = (Keyword)cAlternatives_8_2.eContents().get(1);
		private final Keyword cTransformationsKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final RuleCall cOpSingleAssignParserRuleCall_10 = (RuleCall)cGroup.eContents().get(10);
		private final Assignment cModuleOrchestrationAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cModuleOrchestrationModuleOrchestrationParserRuleCall_11_0 = (RuleCall)cModuleOrchestrationAssignment_11.eContents().get(0);
		private final Keyword cFitnessKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final RuleCall cOpSingleAssignParserRuleCall_13 = (RuleCall)cGroup.eContents().get(13);
		private final Assignment cFitnessFunctionAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cFitnessFunctionFitnessFunctionSpecificationParserRuleCall_14_0 = (RuleCall)cFitnessFunctionAssignment_14.eContents().get(0);
		private final Keyword cAlgorithmsKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final RuleCall cOpSingleAssignParserRuleCall_16 = (RuleCall)cGroup.eContents().get(16);
		private final Assignment cAlgorithmsAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cAlgorithmsAlgorithmListParserRuleCall_17_0 = (RuleCall)cAlgorithmsAssignment_17.eContents().get(0);
		private final Group cGroup_18 = (Group)cGroup.eContents().get(18);
		private final Keyword cEqualityHelperKeyword_18_0 = (Keyword)cGroup_18.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_18_1 = (RuleCall)cGroup_18.eContents().get(1);
		private final Assignment cEqualityHelperAssignment_18_2 = (Assignment)cGroup_18.eContents().get(2);
		private final RuleCall cEqualityHelperEqualityHelperParserRuleCall_18_2_0 = (RuleCall)cEqualityHelperAssignment_18_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		
		//SearchOrchestration:
		//	{SearchOrchestration}
		//	"{"
		//	"model" OpSingleAssign model=InputModel
		//	"solutionLength" OpSingleAssign solutionLength=XExpression ("emptyInitialization" OpSingleAssign
		//	(emptyInitialization?="true" | "false"))?
		//	"transformations" OpSingleAssign moduleOrchestration=ModuleOrchestration
		//	"fitness" OpSingleAssign fitnessFunction=FitnessFunctionSpecification
		//	"algorithms" OpSingleAssign algorithms=AlgorithmList ("equalityHelper" OpSingleAssign equalityHelper=EqualityHelper)?
		//	"}";
		@Override public ParserRule getRule() { return rule; }

		//{SearchOrchestration} "{" "model" OpSingleAssign model=InputModel "solutionLength" OpSingleAssign
		//solutionLength=XExpression ("emptyInitialization" OpSingleAssign (emptyInitialization?="true" | "false"))?
		//"transformations" OpSingleAssign moduleOrchestration=ModuleOrchestration "fitness" OpSingleAssign
		//fitnessFunction=FitnessFunctionSpecification "algorithms" OpSingleAssign algorithms=AlgorithmList ("equalityHelper"
		//OpSingleAssign equalityHelper=EqualityHelper)? "}"
		public Group getGroup() { return cGroup; }

		//{SearchOrchestration}
		public Action getSearchOrchestrationAction_0() { return cSearchOrchestrationAction_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"model"
		public Keyword getModelKeyword_2() { return cModelKeyword_2; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_3() { return cOpSingleAssignParserRuleCall_3; }

		//model=InputModel
		public Assignment getModelAssignment_4() { return cModelAssignment_4; }

		//InputModel
		public RuleCall getModelInputModelParserRuleCall_4_0() { return cModelInputModelParserRuleCall_4_0; }

		//"solutionLength"
		public Keyword getSolutionLengthKeyword_5() { return cSolutionLengthKeyword_5; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_6() { return cOpSingleAssignParserRuleCall_6; }

		//solutionLength=XExpression
		public Assignment getSolutionLengthAssignment_7() { return cSolutionLengthAssignment_7; }

		//XExpression
		public RuleCall getSolutionLengthXExpressionParserRuleCall_7_0() { return cSolutionLengthXExpressionParserRuleCall_7_0; }

		//("emptyInitialization" OpSingleAssign (emptyInitialization?="true" | "false"))?
		public Group getGroup_8() { return cGroup_8; }

		//"emptyInitialization"
		public Keyword getEmptyInitializationKeyword_8_0() { return cEmptyInitializationKeyword_8_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_8_1() { return cOpSingleAssignParserRuleCall_8_1; }

		//emptyInitialization?="true" | "false"
		public Alternatives getAlternatives_8_2() { return cAlternatives_8_2; }

		//emptyInitialization?="true"
		public Assignment getEmptyInitializationAssignment_8_2_0() { return cEmptyInitializationAssignment_8_2_0; }

		//"true"
		public Keyword getEmptyInitializationTrueKeyword_8_2_0_0() { return cEmptyInitializationTrueKeyword_8_2_0_0; }

		//"false"
		public Keyword getFalseKeyword_8_2_1() { return cFalseKeyword_8_2_1; }

		//"transformations"
		public Keyword getTransformationsKeyword_9() { return cTransformationsKeyword_9; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_10() { return cOpSingleAssignParserRuleCall_10; }

		//moduleOrchestration=ModuleOrchestration
		public Assignment getModuleOrchestrationAssignment_11() { return cModuleOrchestrationAssignment_11; }

		//ModuleOrchestration
		public RuleCall getModuleOrchestrationModuleOrchestrationParserRuleCall_11_0() { return cModuleOrchestrationModuleOrchestrationParserRuleCall_11_0; }

		//"fitness"
		public Keyword getFitnessKeyword_12() { return cFitnessKeyword_12; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_13() { return cOpSingleAssignParserRuleCall_13; }

		//fitnessFunction=FitnessFunctionSpecification
		public Assignment getFitnessFunctionAssignment_14() { return cFitnessFunctionAssignment_14; }

		//FitnessFunctionSpecification
		public RuleCall getFitnessFunctionFitnessFunctionSpecificationParserRuleCall_14_0() { return cFitnessFunctionFitnessFunctionSpecificationParserRuleCall_14_0; }

		//"algorithms"
		public Keyword getAlgorithmsKeyword_15() { return cAlgorithmsKeyword_15; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_16() { return cOpSingleAssignParserRuleCall_16; }

		//algorithms=AlgorithmList
		public Assignment getAlgorithmsAssignment_17() { return cAlgorithmsAssignment_17; }

		//AlgorithmList
		public RuleCall getAlgorithmsAlgorithmListParserRuleCall_17_0() { return cAlgorithmsAlgorithmListParserRuleCall_17_0; }

		//("equalityHelper" OpSingleAssign equalityHelper=EqualityHelper)?
		public Group getGroup_18() { return cGroup_18; }

		//"equalityHelper"
		public Keyword getEqualityHelperKeyword_18_0() { return cEqualityHelperKeyword_18_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_18_1() { return cOpSingleAssignParserRuleCall_18_1; }

		//equalityHelper=EqualityHelper
		public Assignment getEqualityHelperAssignment_18_2() { return cEqualityHelperAssignment_18_2; }

		//EqualityHelper
		public RuleCall getEqualityHelperEqualityHelperParserRuleCall_18_2_0() { return cEqualityHelperEqualityHelperParserRuleCall_18_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_19() { return cRightCurlyBracketKeyword_19; }
	}

	public class InputModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.InputModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cFileKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOpSingleAssignParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cPathAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPathXExpressionParserRuleCall_3_0 = (RuleCall)cPathAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAdaptKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Assignment cAdaptationAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cAdaptationXBlockExpressionParserRuleCall_4_2_0 = (RuleCall)cAdaptationAssignment_4_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//InputModel:
		//	"{"
		//	"file" OpSingleAssign path=XExpression ("adapt" OpSingleAssign adaptation=XBlockExpression)?
		//	"}";
		@Override public ParserRule getRule() { return rule; }

		//"{" "file" OpSingleAssign path=XExpression ("adapt" OpSingleAssign adaptation=XBlockExpression)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"file"
		public Keyword getFileKeyword_1() { return cFileKeyword_1; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_2() { return cOpSingleAssignParserRuleCall_2; }

		//path=XExpression
		public Assignment getPathAssignment_3() { return cPathAssignment_3; }

		//XExpression
		public RuleCall getPathXExpressionParserRuleCall_3_0() { return cPathXExpressionParserRuleCall_3_0; }

		//("adapt" OpSingleAssign adaptation=XBlockExpression)?
		public Group getGroup_4() { return cGroup_4; }

		//"adapt"
		public Keyword getAdaptKeyword_4_0() { return cAdaptKeyword_4_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_4_1() { return cOpSingleAssignParserRuleCall_4_1; }

		//adaptation=XBlockExpression
		public Assignment getAdaptationAssignment_4_2() { return cAdaptationAssignment_4_2; }

		//XBlockExpression
		public RuleCall getAdaptationXBlockExpressionParserRuleCall_4_2_0() { return cAdaptationXBlockExpressionParserRuleCall_4_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class EqualityHelperElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.EqualityHelper");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cCallAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cCallXConstructorCallParserRuleCall_0_0 = (RuleCall)cCallAssignment_0.eContents().get(0);
		private final Assignment cMethodAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cMethodXBlockExpressionParserRuleCall_1_0 = (RuleCall)cMethodAssignment_1.eContents().get(0);
		
		//EqualityHelper:
		//	call=XConstructorCall | method=XBlockExpression;
		@Override public ParserRule getRule() { return rule; }

		//call=XConstructorCall | method=XBlockExpression
		public Alternatives getAlternatives() { return cAlternatives; }

		//call=XConstructorCall
		public Assignment getCallAssignment_0() { return cCallAssignment_0; }

		//XConstructorCall
		public RuleCall getCallXConstructorCallParserRuleCall_0_0() { return cCallXConstructorCallParserRuleCall_0_0; }

		//method=XBlockExpression
		public Assignment getMethodAssignment_1() { return cMethodAssignment_1; }

		//XBlockExpression
		public RuleCall getMethodXBlockExpressionParserRuleCall_1_0() { return cMethodXBlockExpressionParserRuleCall_1_0; }
	}

	public class AlgorithmListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.AlgorithmList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSpecificationsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSpecificationsAlgorithmSpecificationParserRuleCall_1_0 = (RuleCall)cSpecificationsAssignment_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//AlgorithmList:
		//	"{" specifications+=AlgorithmSpecification+ "}";
		@Override public ParserRule getRule() { return rule; }

		//"{" specifications+=AlgorithmSpecification+ "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//specifications+=AlgorithmSpecification+
		public Assignment getSpecificationsAssignment_1() { return cSpecificationsAssignment_1; }

		//AlgorithmSpecification
		public RuleCall getSpecificationsAlgorithmSpecificationParserRuleCall_1_0() { return cSpecificationsAlgorithmSpecificationParserRuleCall_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}

	public class FitnessFunctionSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.FitnessFunctionSpecification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cConstructorAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cConstructorXConstructorCallParserRuleCall_0_0 = (RuleCall)cConstructorAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cPreprocessKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Assignment cPreprocessAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cPreprocessXBlockExpressionParserRuleCall_2_2_0 = (RuleCall)cPreprocessAssignment_2_2.eContents().get(0);
		private final Keyword cObjectivesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final RuleCall cOpSingleAssignParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cObjectivesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cObjectivesFitnessDimensionSpecificationParserRuleCall_6_0 = (RuleCall)cObjectivesAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cConstraintsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_8_1 = (RuleCall)cGroup_8.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final Assignment cConstraintsAssignment_8_3 = (Assignment)cGroup_8.eContents().get(3);
		private final RuleCall cConstraintsFitnessDimensionSpecificationParserRuleCall_8_3_0 = (RuleCall)cConstraintsAssignment_8_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cPostprocessKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_9_1 = (RuleCall)cGroup_9.eContents().get(1);
		private final Assignment cPostprocessAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cPostprocessXBlockExpressionParserRuleCall_9_2_0 = (RuleCall)cPostprocessAssignment_9_2.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cSolutionRepairerKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_10_1 = (RuleCall)cGroup_10.eContents().get(1);
		private final Assignment cSolutionRepairerAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cSolutionRepairerXConstructorCallParserRuleCall_10_2_0 = (RuleCall)cSolutionRepairerAssignment_10_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//FitnessFunctionSpecification:
		//	constructor=XConstructorCall? "{" ("preprocess" OpSingleAssign preprocess=XBlockExpression)?
		//	"objectives" OpSingleAssign "{"
		//	objectives+=FitnessDimensionSpecification+
		//	"}" ("constraints" OpSingleAssign "{"
		//	constraints+=FitnessDimensionSpecification+
		//	"}")? ("postprocess" OpSingleAssign postprocess=XBlockExpression)? ("solutionRepairer" OpSingleAssign
		//	solutionRepairer=XConstructorCall)?
		//	"}";
		@Override public ParserRule getRule() { return rule; }

		//constructor=XConstructorCall? "{" ("preprocess" OpSingleAssign preprocess=XBlockExpression)? "objectives" OpSingleAssign
		//"{" objectives+=FitnessDimensionSpecification+ "}" ("constraints" OpSingleAssign "{"
		//constraints+=FitnessDimensionSpecification+ "}")? ("postprocess" OpSingleAssign postprocess=XBlockExpression)?
		//("solutionRepairer" OpSingleAssign solutionRepairer=XConstructorCall)? "}"
		public Group getGroup() { return cGroup; }

		//constructor=XConstructorCall?
		public Assignment getConstructorAssignment_0() { return cConstructorAssignment_0; }

		//XConstructorCall
		public RuleCall getConstructorXConstructorCallParserRuleCall_0_0() { return cConstructorXConstructorCallParserRuleCall_0_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//("preprocess" OpSingleAssign preprocess=XBlockExpression)?
		public Group getGroup_2() { return cGroup_2; }

		//"preprocess"
		public Keyword getPreprocessKeyword_2_0() { return cPreprocessKeyword_2_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_2_1() { return cOpSingleAssignParserRuleCall_2_1; }

		//preprocess=XBlockExpression
		public Assignment getPreprocessAssignment_2_2() { return cPreprocessAssignment_2_2; }

		//XBlockExpression
		public RuleCall getPreprocessXBlockExpressionParserRuleCall_2_2_0() { return cPreprocessXBlockExpressionParserRuleCall_2_2_0; }

		//"objectives"
		public Keyword getObjectivesKeyword_3() { return cObjectivesKeyword_3; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_4() { return cOpSingleAssignParserRuleCall_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//objectives+=FitnessDimensionSpecification+
		public Assignment getObjectivesAssignment_6() { return cObjectivesAssignment_6; }

		//FitnessDimensionSpecification
		public RuleCall getObjectivesFitnessDimensionSpecificationParserRuleCall_6_0() { return cObjectivesFitnessDimensionSpecificationParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }

		//("constraints" OpSingleAssign "{" constraints+=FitnessDimensionSpecification+ "}")?
		public Group getGroup_8() { return cGroup_8; }

		//"constraints"
		public Keyword getConstraintsKeyword_8_0() { return cConstraintsKeyword_8_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_8_1() { return cOpSingleAssignParserRuleCall_8_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_8_2() { return cLeftCurlyBracketKeyword_8_2; }

		//constraints+=FitnessDimensionSpecification+
		public Assignment getConstraintsAssignment_8_3() { return cConstraintsAssignment_8_3; }

		//FitnessDimensionSpecification
		public RuleCall getConstraintsFitnessDimensionSpecificationParserRuleCall_8_3_0() { return cConstraintsFitnessDimensionSpecificationParserRuleCall_8_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }

		//("postprocess" OpSingleAssign postprocess=XBlockExpression)?
		public Group getGroup_9() { return cGroup_9; }

		//"postprocess"
		public Keyword getPostprocessKeyword_9_0() { return cPostprocessKeyword_9_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_9_1() { return cOpSingleAssignParserRuleCall_9_1; }

		//postprocess=XBlockExpression
		public Assignment getPostprocessAssignment_9_2() { return cPostprocessAssignment_9_2; }

		//XBlockExpression
		public RuleCall getPostprocessXBlockExpressionParserRuleCall_9_2_0() { return cPostprocessXBlockExpressionParserRuleCall_9_2_0; }

		//("solutionRepairer" OpSingleAssign solutionRepairer=XConstructorCall)?
		public Group getGroup_10() { return cGroup_10; }

		//"solutionRepairer"
		public Keyword getSolutionRepairerKeyword_10_0() { return cSolutionRepairerKeyword_10_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_10_1() { return cOpSingleAssignParserRuleCall_10_1; }

		//solutionRepairer=XConstructorCall
		public Assignment getSolutionRepairerAssignment_10_2() { return cSolutionRepairerAssignment_10_2; }

		//XConstructorCall
		public RuleCall getSolutionRepairerXConstructorCallParserRuleCall_10_2_0() { return cSolutionRepairerXConstructorCallParserRuleCall_10_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class FitnessDimensionSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.FitnessDimensionSpecification");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFitnessDimensionConstructorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFitnessDimensionXBaseParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFitnessDimensionOCLParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//FitnessDimensionSpecification:
		//	FitnessDimensionConstructor | FitnessDimensionXBase | FitnessDimensionOCL;
		@Override public ParserRule getRule() { return rule; }

		//FitnessDimensionConstructor | FitnessDimensionXBase | FitnessDimensionOCL
		public Alternatives getAlternatives() { return cAlternatives; }

		//FitnessDimensionConstructor
		public RuleCall getFitnessDimensionConstructorParserRuleCall_0() { return cFitnessDimensionConstructorParserRuleCall_0; }

		//FitnessDimensionXBase
		public RuleCall getFitnessDimensionXBaseParserRuleCall_1() { return cFitnessDimensionXBaseParserRuleCall_1; }

		//FitnessDimensionOCL
		public RuleCall getFitnessDimensionOCLParserRuleCall_2() { return cFitnessDimensionOCLParserRuleCall_2; }
	}

	public class FitnessDimensionConstructorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.FitnessDimensionConstructor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameValidIDParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final RuleCall cOpKeyAssignParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeFitnessDimensionTypeEnumRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Assignment cCallAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCallXConstructorCallParserRuleCall_3_0 = (RuleCall)cCallAssignment_3.eContents().get(0);
		
		//FitnessDimensionConstructor:
		//	name=ValidID OpKeyAssign type=FitnessDimensionType call=XConstructorCall;
		@Override public ParserRule getRule() { return rule; }

		//name=ValidID OpKeyAssign type=FitnessDimensionType call=XConstructorCall
		public Group getGroup() { return cGroup; }

		//name=ValidID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_0_0() { return cNameValidIDParserRuleCall_0_0; }

		//OpKeyAssign
		public RuleCall getOpKeyAssignParserRuleCall_1() { return cOpKeyAssignParserRuleCall_1; }

		//type=FitnessDimensionType
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//FitnessDimensionType
		public RuleCall getTypeFitnessDimensionTypeEnumRuleCall_2_0() { return cTypeFitnessDimensionTypeEnumRuleCall_2_0; }

		//call=XConstructorCall
		public Assignment getCallAssignment_3() { return cCallAssignment_3; }

		//XConstructorCall
		public RuleCall getCallXConstructorCallParserRuleCall_3_0() { return cCallXConstructorCallParserRuleCall_3_0; }
	}

	public class FitnessDimensionXBaseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.FitnessDimensionXBase");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameValidIDParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final RuleCall cOpKeyAssignParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeFitnessDimensionTypeEnumRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueXBlockExpressionParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//FitnessDimensionXBase:
		//	name=ValidID OpKeyAssign type=FitnessDimensionType value=XBlockExpression;
		@Override public ParserRule getRule() { return rule; }

		//name=ValidID OpKeyAssign type=FitnessDimensionType value=XBlockExpression
		public Group getGroup() { return cGroup; }

		//name=ValidID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_0_0() { return cNameValidIDParserRuleCall_0_0; }

		//OpKeyAssign
		public RuleCall getOpKeyAssignParserRuleCall_1() { return cOpKeyAssignParserRuleCall_1; }

		//type=FitnessDimensionType
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//FitnessDimensionType
		public RuleCall getTypeFitnessDimensionTypeEnumRuleCall_2_0() { return cTypeFitnessDimensionTypeEnumRuleCall_2_0; }

		//value=XBlockExpression
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//XBlockExpression
		public RuleCall getValueXBlockExpressionParserRuleCall_3_0() { return cValueXBlockExpressionParserRuleCall_3_0; }
	}

	public class FitnessDimensionOCLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.FitnessDimensionOCL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameValidIDParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final RuleCall cOpKeyAssignParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeFitnessDimensionTypeEnumRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Assignment cQueryAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cQueryXStringLiteralParserRuleCall_3_0 = (RuleCall)cQueryAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDefExpressionsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDefExpressionsDefExpressionParserRuleCall_4_1_0 = (RuleCall)cDefExpressionsAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		
		//FitnessDimensionOCL:
		//	name=ValidID OpKeyAssign type=FitnessDimensionType query=XStringLiteral ("{" defExpressions+=DefExpression* "}")?;
		@Override public ParserRule getRule() { return rule; }

		//name=ValidID OpKeyAssign type=FitnessDimensionType query=XStringLiteral ("{" defExpressions+=DefExpression* "}")?
		public Group getGroup() { return cGroup; }

		//name=ValidID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_0_0() { return cNameValidIDParserRuleCall_0_0; }

		//OpKeyAssign
		public RuleCall getOpKeyAssignParserRuleCall_1() { return cOpKeyAssignParserRuleCall_1; }

		//type=FitnessDimensionType
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//FitnessDimensionType
		public RuleCall getTypeFitnessDimensionTypeEnumRuleCall_2_0() { return cTypeFitnessDimensionTypeEnumRuleCall_2_0; }

		//query=XStringLiteral
		public Assignment getQueryAssignment_3() { return cQueryAssignment_3; }

		//XStringLiteral
		public RuleCall getQueryXStringLiteralParserRuleCall_3_0() { return cQueryXStringLiteralParserRuleCall_3_0; }

		//("{" defExpressions+=DefExpression* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }

		//defExpressions+=DefExpression*
		public Assignment getDefExpressionsAssignment_4_1() { return cDefExpressionsAssignment_4_1; }

		//DefExpression
		public RuleCall getDefExpressionsDefExpressionParserRuleCall_4_1_0() { return cDefExpressionsDefExpressionParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_2() { return cRightCurlyBracketKeyword_4_2; }
	}

	public class DefExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.DefExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cExpressionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExpressionSTRINGTerminalRuleCall_1_0 = (RuleCall)cExpressionAssignment_1.eContents().get(0);
		
		//DefExpression:
		//	"def" expression=STRING;
		@Override public ParserRule getRule() { return rule; }

		//"def" expression=STRING
		public Group getGroup() { return cGroup; }

		//"def"
		public Keyword getDefKeyword_0() { return cDefKeyword_0; }

		//expression=STRING
		public Assignment getExpressionAssignment_1() { return cExpressionAssignment_1; }

		//STRING
		public RuleCall getExpressionSTRINGTerminalRuleCall_1_0() { return cExpressionSTRINGTerminalRuleCall_1_0; }
	}

	public class AlgorithmSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.AlgorithmSpecification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameValidIDParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final RuleCall cOpKeyAssignParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cCallAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCallXExpressionParserRuleCall_2_0 = (RuleCall)cCallAssignment_2.eContents().get(0);
		
		//AlgorithmSpecification:
		//	name=ValidID OpKeyAssign call=XExpression;
		@Override public ParserRule getRule() { return rule; }

		//name=ValidID OpKeyAssign call=XExpression
		public Group getGroup() { return cGroup; }

		//name=ValidID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_0_0() { return cNameValidIDParserRuleCall_0_0; }

		//OpKeyAssign
		public RuleCall getOpKeyAssignParserRuleCall_1() { return cOpKeyAssignParserRuleCall_1; }

		//call=XExpression
		public Assignment getCallAssignment_2() { return cCallAssignment_2; }

		//XExpression
		public RuleCall getCallXExpressionParserRuleCall_2_0() { return cCallXExpressionParserRuleCall_2_0; }
	}

	public class ExperimentOrchestrationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.ExperimentOrchestration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cExperimentOrchestrationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cPopulationSizeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cOpSingleAssignParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cPopulationSizeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPopulationSizeXExpressionParserRuleCall_4_0 = (RuleCall)cPopulationSizeAssignment_4.eContents().get(0);
		private final Keyword cMaxEvaluationsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final RuleCall cOpSingleAssignParserRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Assignment cMaxEvaluationsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cMaxEvaluationsXExpressionParserRuleCall_7_0 = (RuleCall)cMaxEvaluationsAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cMaxSecondsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_8_1 = (RuleCall)cGroup_8.eContents().get(1);
		private final Assignment cMaxSecondsAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cMaxSecondsXExpressionParserRuleCall_8_2_0 = (RuleCall)cMaxSecondsAssignment_8_2.eContents().get(0);
		private final Keyword cNrRunsKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final RuleCall cOpSingleAssignParserRuleCall_10 = (RuleCall)cGroup.eContents().get(10);
		private final Assignment cNrRunsAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cNrRunsXNumberLiteralParserRuleCall_11_0 = (RuleCall)cNrRunsAssignment_11.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cReferenceSetKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_12_1 = (RuleCall)cGroup_12.eContents().get(1);
		private final Assignment cReferenceSetAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cReferenceSetXExpressionParserRuleCall_12_2_0 = (RuleCall)cReferenceSetAssignment_12_2.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cProgressListenersKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_13_1 = (RuleCall)cGroup_13.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_13_2 = (Keyword)cGroup_13.eContents().get(2);
		private final Group cGroup_13_3 = (Group)cGroup_13.eContents().get(3);
		private final Assignment cProgressListenersAssignment_13_3_0 = (Assignment)cGroup_13_3.eContents().get(0);
		private final RuleCall cProgressListenersXConstructorCallParserRuleCall_13_3_0_0 = (RuleCall)cProgressListenersAssignment_13_3_0.eContents().get(0);
		private final Group cGroup_13_3_1 = (Group)cGroup_13_3.eContents().get(1);
		private final Keyword cCommaKeyword_13_3_1_0 = (Keyword)cGroup_13_3_1.eContents().get(0);
		private final Assignment cProgressListenersAssignment_13_3_1_1 = (Assignment)cGroup_13_3_1.eContents().get(1);
		private final RuleCall cProgressListenersXConstructorCallParserRuleCall_13_3_1_1_0 = (RuleCall)cProgressListenersAssignment_13_3_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_13_4 = (Keyword)cGroup_13.eContents().get(4);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Keyword cCollectorsKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_14_1 = (RuleCall)cGroup_14.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_14_2 = (Keyword)cGroup_14.eContents().get(2);
		private final Group cGroup_14_3 = (Group)cGroup_14.eContents().get(3);
		private final Assignment cCollectorsAssignment_14_3_0 = (Assignment)cGroup_14_3.eContents().get(0);
		private final RuleCall cCollectorsCollectorArrayParserRuleCall_14_3_0_0 = (RuleCall)cCollectorsAssignment_14_3_0.eContents().get(0);
		private final Assignment cCustomCollectorsAssignment_14_3_1 = (Assignment)cGroup_14_3.eContents().get(1);
		private final RuleCall cCustomCollectorsXConstructorCallParserRuleCall_14_3_1_0 = (RuleCall)cCustomCollectorsAssignment_14_3_1.eContents().get(0);
		private final Group cGroup_14_3_2 = (Group)cGroup_14_3.eContents().get(2);
		private final Keyword cCommaKeyword_14_3_2_0 = (Keyword)cGroup_14_3_2.eContents().get(0);
		private final Assignment cCustomCollectorsAssignment_14_3_2_1 = (Assignment)cGroup_14_3_2.eContents().get(1);
		private final RuleCall cCustomCollectorsXConstructorCallParserRuleCall_14_3_2_1_0 = (RuleCall)cCustomCollectorsAssignment_14_3_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_14_4 = (Keyword)cGroup_14.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		//ExperimentOrchestration:
		//	{ExperimentOrchestration}
		//	"{"
		//	"populationSize" OpSingleAssign populationSize=XExpression
		//	"maxEvaluations" OpSingleAssign maxEvaluations=XExpression ("maxSeconds" OpSingleAssign maxSeconds=XExpression)?
		//	"nrRuns" OpSingleAssign nrRuns=XNumberLiteral ("referenceSet" OpSingleAssign referenceSet=XExpression)?
		//	("progressListeners" OpSingleAssign "[" (progressListeners+=XConstructorCall (","
		//	progressListeners+=XConstructorCall)*)? "]")? ("collectors" OpSingleAssign "[" (collectors=CollectorArray
		//	customCollectors+=XConstructorCall ("," customCollectors+=XConstructorCall)*)? "]")?
		//	"}";
		@Override public ParserRule getRule() { return rule; }

		//{ExperimentOrchestration} "{" "populationSize" OpSingleAssign populationSize=XExpression "maxEvaluations" OpSingleAssign
		//maxEvaluations=XExpression ("maxSeconds" OpSingleAssign maxSeconds=XExpression)? "nrRuns" OpSingleAssign
		//nrRuns=XNumberLiteral ("referenceSet" OpSingleAssign referenceSet=XExpression)? ("progressListeners" OpSingleAssign
		//"[" (progressListeners+=XConstructorCall ("," progressListeners+=XConstructorCall)*)? "]")? ("collectors"
		//OpSingleAssign "[" (collectors=CollectorArray customCollectors+=XConstructorCall (","
		//customCollectors+=XConstructorCall)*)? "]")? "}"
		public Group getGroup() { return cGroup; }

		//{ExperimentOrchestration}
		public Action getExperimentOrchestrationAction_0() { return cExperimentOrchestrationAction_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"populationSize"
		public Keyword getPopulationSizeKeyword_2() { return cPopulationSizeKeyword_2; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_3() { return cOpSingleAssignParserRuleCall_3; }

		//populationSize=XExpression
		public Assignment getPopulationSizeAssignment_4() { return cPopulationSizeAssignment_4; }

		//XExpression
		public RuleCall getPopulationSizeXExpressionParserRuleCall_4_0() { return cPopulationSizeXExpressionParserRuleCall_4_0; }

		//"maxEvaluations"
		public Keyword getMaxEvaluationsKeyword_5() { return cMaxEvaluationsKeyword_5; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_6() { return cOpSingleAssignParserRuleCall_6; }

		//maxEvaluations=XExpression
		public Assignment getMaxEvaluationsAssignment_7() { return cMaxEvaluationsAssignment_7; }

		//XExpression
		public RuleCall getMaxEvaluationsXExpressionParserRuleCall_7_0() { return cMaxEvaluationsXExpressionParserRuleCall_7_0; }

		//("maxSeconds" OpSingleAssign maxSeconds=XExpression)?
		public Group getGroup_8() { return cGroup_8; }

		//"maxSeconds"
		public Keyword getMaxSecondsKeyword_8_0() { return cMaxSecondsKeyword_8_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_8_1() { return cOpSingleAssignParserRuleCall_8_1; }

		//maxSeconds=XExpression
		public Assignment getMaxSecondsAssignment_8_2() { return cMaxSecondsAssignment_8_2; }

		//XExpression
		public RuleCall getMaxSecondsXExpressionParserRuleCall_8_2_0() { return cMaxSecondsXExpressionParserRuleCall_8_2_0; }

		//"nrRuns"
		public Keyword getNrRunsKeyword_9() { return cNrRunsKeyword_9; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_10() { return cOpSingleAssignParserRuleCall_10; }

		//nrRuns=XNumberLiteral
		public Assignment getNrRunsAssignment_11() { return cNrRunsAssignment_11; }

		//XNumberLiteral
		public RuleCall getNrRunsXNumberLiteralParserRuleCall_11_0() { return cNrRunsXNumberLiteralParserRuleCall_11_0; }

		//("referenceSet" OpSingleAssign referenceSet=XExpression)?
		public Group getGroup_12() { return cGroup_12; }

		//"referenceSet"
		public Keyword getReferenceSetKeyword_12_0() { return cReferenceSetKeyword_12_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_12_1() { return cOpSingleAssignParserRuleCall_12_1; }

		//referenceSet=XExpression
		public Assignment getReferenceSetAssignment_12_2() { return cReferenceSetAssignment_12_2; }

		//XExpression
		public RuleCall getReferenceSetXExpressionParserRuleCall_12_2_0() { return cReferenceSetXExpressionParserRuleCall_12_2_0; }

		//("progressListeners" OpSingleAssign "[" (progressListeners+=XConstructorCall (","
		//progressListeners+=XConstructorCall)*)? "]")?
		public Group getGroup_13() { return cGroup_13; }

		//"progressListeners"
		public Keyword getProgressListenersKeyword_13_0() { return cProgressListenersKeyword_13_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_13_1() { return cOpSingleAssignParserRuleCall_13_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_13_2() { return cLeftSquareBracketKeyword_13_2; }

		//(progressListeners+=XConstructorCall ("," progressListeners+=XConstructorCall)*)?
		public Group getGroup_13_3() { return cGroup_13_3; }

		//progressListeners+=XConstructorCall
		public Assignment getProgressListenersAssignment_13_3_0() { return cProgressListenersAssignment_13_3_0; }

		//XConstructorCall
		public RuleCall getProgressListenersXConstructorCallParserRuleCall_13_3_0_0() { return cProgressListenersXConstructorCallParserRuleCall_13_3_0_0; }

		//("," progressListeners+=XConstructorCall)*
		public Group getGroup_13_3_1() { return cGroup_13_3_1; }

		//","
		public Keyword getCommaKeyword_13_3_1_0() { return cCommaKeyword_13_3_1_0; }

		//progressListeners+=XConstructorCall
		public Assignment getProgressListenersAssignment_13_3_1_1() { return cProgressListenersAssignment_13_3_1_1; }

		//XConstructorCall
		public RuleCall getProgressListenersXConstructorCallParserRuleCall_13_3_1_1_0() { return cProgressListenersXConstructorCallParserRuleCall_13_3_1_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_13_4() { return cRightSquareBracketKeyword_13_4; }

		//("collectors" OpSingleAssign "[" (collectors=CollectorArray customCollectors+=XConstructorCall (","
		//customCollectors+=XConstructorCall)*)? "]")?
		public Group getGroup_14() { return cGroup_14; }

		//"collectors"
		public Keyword getCollectorsKeyword_14_0() { return cCollectorsKeyword_14_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_14_1() { return cOpSingleAssignParserRuleCall_14_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_14_2() { return cLeftSquareBracketKeyword_14_2; }

		//(collectors=CollectorArray customCollectors+=XConstructorCall ("," customCollectors+=XConstructorCall)*)?
		public Group getGroup_14_3() { return cGroup_14_3; }

		//collectors=CollectorArray
		public Assignment getCollectorsAssignment_14_3_0() { return cCollectorsAssignment_14_3_0; }

		//CollectorArray
		public RuleCall getCollectorsCollectorArrayParserRuleCall_14_3_0_0() { return cCollectorsCollectorArrayParserRuleCall_14_3_0_0; }

		//customCollectors+=XConstructorCall
		public Assignment getCustomCollectorsAssignment_14_3_1() { return cCustomCollectorsAssignment_14_3_1; }

		//XConstructorCall
		public RuleCall getCustomCollectorsXConstructorCallParserRuleCall_14_3_1_0() { return cCustomCollectorsXConstructorCallParserRuleCall_14_3_1_0; }

		//("," customCollectors+=XConstructorCall)*
		public Group getGroup_14_3_2() { return cGroup_14_3_2; }

		//","
		public Keyword getCommaKeyword_14_3_2_0() { return cCommaKeyword_14_3_2_0; }

		//customCollectors+=XConstructorCall
		public Assignment getCustomCollectorsAssignment_14_3_2_1() { return cCustomCollectorsAssignment_14_3_2_1; }

		//XConstructorCall
		public RuleCall getCustomCollectorsXConstructorCallParserRuleCall_14_3_2_1_0() { return cCustomCollectorsXConstructorCallParserRuleCall_14_3_2_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_14_4() { return cRightSquareBracketKeyword_14_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }
	}

	public class CollectorArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.CollectorArray");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCollectorArrayAction_0 = (Action)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cHypervolumeAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cHypervolumeHypervolumeKeyword_1_0_0 = (Keyword)cHypervolumeAssignment_1_0.eContents().get(0);
		private final Assignment cGenerationalDistanceAssignment_1_1 = (Assignment)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cGenerationalDistanceGenerationalDistanceKeyword_1_1_0 = (Keyword)cGenerationalDistanceAssignment_1_1.eContents().get(0);
		private final Assignment cInvertedGenerationalDistanceAssignment_1_2 = (Assignment)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cInvertedGenerationalDistanceInvertedGenerationalDistanceKeyword_1_2_0 = (Keyword)cInvertedGenerationalDistanceAssignment_1_2.eContents().get(0);
		private final Assignment cSpacingAssignment_1_3 = (Assignment)cUnorderedGroup_1.eContents().get(3);
		private final Keyword cSpacingSpacingKeyword_1_3_0 = (Keyword)cSpacingAssignment_1_3.eContents().get(0);
		private final Assignment cAdditiveEpsilonIndicatorAssignment_1_4 = (Assignment)cUnorderedGroup_1.eContents().get(4);
		private final Keyword cAdditiveEpsilonIndicatorAdditiveEpsilonIndicatorKeyword_1_4_0 = (Keyword)cAdditiveEpsilonIndicatorAssignment_1_4.eContents().get(0);
		private final Assignment cContributionAssignment_1_5 = (Assignment)cUnorderedGroup_1.eContents().get(5);
		private final Keyword cContributionContributionKeyword_1_5_0 = (Keyword)cContributionAssignment_1_5.eContents().get(0);
		private final Assignment cR1Assignment_1_6 = (Assignment)cUnorderedGroup_1.eContents().get(6);
		private final Keyword cR1R1Keyword_1_6_0 = (Keyword)cR1Assignment_1_6.eContents().get(0);
		private final Assignment cR2Assignment_1_7 = (Assignment)cUnorderedGroup_1.eContents().get(7);
		private final Keyword cR2R2Keyword_1_7_0 = (Keyword)cR2Assignment_1_7.eContents().get(0);
		private final Assignment cR3Assignment_1_8 = (Assignment)cUnorderedGroup_1.eContents().get(8);
		private final Keyword cR3R3Keyword_1_8_0 = (Keyword)cR3Assignment_1_8.eContents().get(0);
		private final Assignment cAdaptiveMultimethodVariationAssignment_1_9 = (Assignment)cUnorderedGroup_1.eContents().get(9);
		private final Keyword cAdaptiveMultimethodVariationAdaptiveMultimethodVariationKeyword_1_9_0 = (Keyword)cAdaptiveMultimethodVariationAssignment_1_9.eContents().get(0);
		private final Assignment cAdaptiveTimeContinuationAssignment_1_10 = (Assignment)cUnorderedGroup_1.eContents().get(10);
		private final Keyword cAdaptiveTimeContinuationAdaptiveTimeContinuationKeyword_1_10_0 = (Keyword)cAdaptiveTimeContinuationAssignment_1_10.eContents().get(0);
		private final Assignment cApproximationSetAssignment_1_11 = (Assignment)cUnorderedGroup_1.eContents().get(11);
		private final Keyword cApproximationSetApproximationSetKeyword_1_11_0 = (Keyword)cApproximationSetAssignment_1_11.eContents().get(0);
		private final Assignment cEpsilonProgressAssignment_1_12 = (Assignment)cUnorderedGroup_1.eContents().get(12);
		private final Keyword cEpsilonProgressEpsilonProgressKeyword_1_12_0 = (Keyword)cEpsilonProgressAssignment_1_12.eContents().get(0);
		private final Assignment cElapsedTimeAssignment_1_13 = (Assignment)cUnorderedGroup_1.eContents().get(13);
		private final Keyword cElapsedTimeElapsedTimeKeyword_1_13_0 = (Keyword)cElapsedTimeAssignment_1_13.eContents().get(0);
		private final Assignment cPopulationSizeAssignment_1_14 = (Assignment)cUnorderedGroup_1.eContents().get(14);
		private final Keyword cPopulationSizePopulationSizeKeyword_1_14_0 = (Keyword)cPopulationSizeAssignment_1_14.eContents().get(0);
		
		//CollectorArray:
		//	{CollectorArray} (hypervolume?="hypervolume"? & generationalDistance?="generationalDistance"? &
		//	invertedGenerationalDistance?="invertedGenerationalDistance"? & spacing?="spacing"? &
		//	additiveEpsilonIndicator?="additiveEpsilonIndicator"? & contribution?="contribution"? & r1?="R1"? & r2?="R2"? &
		//	r3?="R3"? & adaptiveMultimethodVariation?="adaptiveMultimethodVariation"? &
		//	adaptiveTimeContinuation?="adaptiveTimeContinuation"? & approximationSet?="approximationSet"? &
		//	epsilonProgress?="epsilonProgress"? & elapsedTime?="elapsedTime"? & populationSize?="populationSize"?);
		@Override public ParserRule getRule() { return rule; }

		//{CollectorArray} (hypervolume?="hypervolume"? & generationalDistance?="generationalDistance"? &
		//invertedGenerationalDistance?="invertedGenerationalDistance"? & spacing?="spacing"? &
		//additiveEpsilonIndicator?="additiveEpsilonIndicator"? & contribution?="contribution"? & r1?="R1"? & r2?="R2"? &
		//r3?="R3"? & adaptiveMultimethodVariation?="adaptiveMultimethodVariation"? &
		//adaptiveTimeContinuation?="adaptiveTimeContinuation"? & approximationSet?="approximationSet"? &
		//epsilonProgress?="epsilonProgress"? & elapsedTime?="elapsedTime"? & populationSize?="populationSize"?)
		public Group getGroup() { return cGroup; }

		//{CollectorArray}
		public Action getCollectorArrayAction_0() { return cCollectorArrayAction_0; }

		//hypervolume?="hypervolume"? & generationalDistance?="generationalDistance"? &
		//invertedGenerationalDistance?="invertedGenerationalDistance"? & spacing?="spacing"? &
		//additiveEpsilonIndicator?="additiveEpsilonIndicator"? & contribution?="contribution"? & r1?="R1"? & r2?="R2"? &
		//r3?="R3"? & adaptiveMultimethodVariation?="adaptiveMultimethodVariation"? &
		//adaptiveTimeContinuation?="adaptiveTimeContinuation"? & approximationSet?="approximationSet"? &
		//epsilonProgress?="epsilonProgress"? & elapsedTime?="elapsedTime"? & populationSize?="populationSize"?
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }

		//hypervolume?="hypervolume"?
		public Assignment getHypervolumeAssignment_1_0() { return cHypervolumeAssignment_1_0; }

		//"hypervolume"
		public Keyword getHypervolumeHypervolumeKeyword_1_0_0() { return cHypervolumeHypervolumeKeyword_1_0_0; }

		//generationalDistance?="generationalDistance"?
		public Assignment getGenerationalDistanceAssignment_1_1() { return cGenerationalDistanceAssignment_1_1; }

		//"generationalDistance"
		public Keyword getGenerationalDistanceGenerationalDistanceKeyword_1_1_0() { return cGenerationalDistanceGenerationalDistanceKeyword_1_1_0; }

		//invertedGenerationalDistance?="invertedGenerationalDistance"?
		public Assignment getInvertedGenerationalDistanceAssignment_1_2() { return cInvertedGenerationalDistanceAssignment_1_2; }

		//"invertedGenerationalDistance"
		public Keyword getInvertedGenerationalDistanceInvertedGenerationalDistanceKeyword_1_2_0() { return cInvertedGenerationalDistanceInvertedGenerationalDistanceKeyword_1_2_0; }

		//spacing?="spacing"?
		public Assignment getSpacingAssignment_1_3() { return cSpacingAssignment_1_3; }

		//"spacing"
		public Keyword getSpacingSpacingKeyword_1_3_0() { return cSpacingSpacingKeyword_1_3_0; }

		//additiveEpsilonIndicator?="additiveEpsilonIndicator"?
		public Assignment getAdditiveEpsilonIndicatorAssignment_1_4() { return cAdditiveEpsilonIndicatorAssignment_1_4; }

		//"additiveEpsilonIndicator"
		public Keyword getAdditiveEpsilonIndicatorAdditiveEpsilonIndicatorKeyword_1_4_0() { return cAdditiveEpsilonIndicatorAdditiveEpsilonIndicatorKeyword_1_4_0; }

		//contribution?="contribution"?
		public Assignment getContributionAssignment_1_5() { return cContributionAssignment_1_5; }

		//"contribution"
		public Keyword getContributionContributionKeyword_1_5_0() { return cContributionContributionKeyword_1_5_0; }

		//r1?="R1"?
		public Assignment getR1Assignment_1_6() { return cR1Assignment_1_6; }

		//"R1"
		public Keyword getR1R1Keyword_1_6_0() { return cR1R1Keyword_1_6_0; }

		//r2?="R2"?
		public Assignment getR2Assignment_1_7() { return cR2Assignment_1_7; }

		//"R2"
		public Keyword getR2R2Keyword_1_7_0() { return cR2R2Keyword_1_7_0; }

		//r3?="R3"?
		public Assignment getR3Assignment_1_8() { return cR3Assignment_1_8; }

		//"R3"
		public Keyword getR3R3Keyword_1_8_0() { return cR3R3Keyword_1_8_0; }

		//adaptiveMultimethodVariation?="adaptiveMultimethodVariation"?
		public Assignment getAdaptiveMultimethodVariationAssignment_1_9() { return cAdaptiveMultimethodVariationAssignment_1_9; }

		//"adaptiveMultimethodVariation"
		public Keyword getAdaptiveMultimethodVariationAdaptiveMultimethodVariationKeyword_1_9_0() { return cAdaptiveMultimethodVariationAdaptiveMultimethodVariationKeyword_1_9_0; }

		//adaptiveTimeContinuation?="adaptiveTimeContinuation"?
		public Assignment getAdaptiveTimeContinuationAssignment_1_10() { return cAdaptiveTimeContinuationAssignment_1_10; }

		//"adaptiveTimeContinuation"
		public Keyword getAdaptiveTimeContinuationAdaptiveTimeContinuationKeyword_1_10_0() { return cAdaptiveTimeContinuationAdaptiveTimeContinuationKeyword_1_10_0; }

		//approximationSet?="approximationSet"?
		public Assignment getApproximationSetAssignment_1_11() { return cApproximationSetAssignment_1_11; }

		//"approximationSet"
		public Keyword getApproximationSetApproximationSetKeyword_1_11_0() { return cApproximationSetApproximationSetKeyword_1_11_0; }

		//epsilonProgress?="epsilonProgress"?
		public Assignment getEpsilonProgressAssignment_1_12() { return cEpsilonProgressAssignment_1_12; }

		//"epsilonProgress"
		public Keyword getEpsilonProgressEpsilonProgressKeyword_1_12_0() { return cEpsilonProgressEpsilonProgressKeyword_1_12_0; }

		//elapsedTime?="elapsedTime"?
		public Assignment getElapsedTimeAssignment_1_13() { return cElapsedTimeAssignment_1_13; }

		//"elapsedTime"
		public Keyword getElapsedTimeElapsedTimeKeyword_1_13_0() { return cElapsedTimeElapsedTimeKeyword_1_13_0; }

		//populationSize?="populationSize"?
		public Assignment getPopulationSizeAssignment_1_14() { return cPopulationSizeAssignment_1_14; }

		//"populationSize"
		public Keyword getPopulationSizePopulationSizeKeyword_1_14_0() { return cPopulationSizePopulationSizeKeyword_1_14_0; }
	}

	public class AnalysisOrchestrationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.AnalysisOrchestration");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cIndicatorsKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final RuleCall cOpSingleAssignParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final Assignment cIndicatorsAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cIndicatorsIndicatorArrayParserRuleCall_0_3_0 = (RuleCall)cIndicatorsAssignment_0_3.eContents().get(0);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cSignificanceKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Assignment cSignificanceAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cSignificanceXNumberLiteralParserRuleCall_1_2_0 = (RuleCall)cSignificanceAssignment_1_2.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cShowKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Assignment cShowAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cShowShowArrayParserRuleCall_2_2_0 = (RuleCall)cShowAssignment_2_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cUnorderedGroup.eContents().get(3);
		private final Keyword cGroupingKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Assignment cGroupingAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cGroupingAnalysisGroupListParserRuleCall_3_2_0 = (RuleCall)cGroupingAssignment_3_2.eContents().get(0);
		private final Assignment cSaveCommandAssignment_4 = (Assignment)cUnorderedGroup.eContents().get(4);
		private final RuleCall cSaveCommandSaveAnalysisCommandParserRuleCall_4_0 = (RuleCall)cSaveCommandAssignment_4.eContents().get(0);
		private final Assignment cBoxplotCommandAssignment_5 = (Assignment)cUnorderedGroup.eContents().get(5);
		private final RuleCall cBoxplotCommandBoxplotCommandParserRuleCall_5_0 = (RuleCall)cBoxplotCommandAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cUnorderedGroup.eContents().get(6);
		private final Assignment cPrintCommandAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cPrintCommandPrintAnalysisCommandParserRuleCall_6_0_0 = (RuleCall)cPrintCommandAssignment_6_0.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		
		//AnalysisOrchestration:
		//	"{"
		//	"indicators" OpSingleAssign indicators=IndicatorArray &
		//	"significance" OpSingleAssign significance=XNumberLiteral &
		//	"show" OpSingleAssign show=ShowArray & ("grouping" OpSingleAssign grouping=AnalysisGroupList)? &
		//	saveCommand=SaveAnalysisCommand? & boxplotCommand=BoxplotCommand? & printCommand=PrintAnalysisCommand?
		//	"}";
		@Override public ParserRule getRule() { return rule; }

		//"{" "indicators" OpSingleAssign indicators=IndicatorArray & "significance" OpSingleAssign significance=XNumberLiteral &
		//"show" OpSingleAssign show=ShowArray & ("grouping" OpSingleAssign grouping=AnalysisGroupList)? &
		//saveCommand=SaveAnalysisCommand? & boxplotCommand=BoxplotCommand? & printCommand=PrintAnalysisCommand? "}"
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }

		//"{" "indicators" OpSingleAssign indicators=IndicatorArray
		public Group getGroup_0() { return cGroup_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0_0() { return cLeftCurlyBracketKeyword_0_0; }

		//"indicators"
		public Keyword getIndicatorsKeyword_0_1() { return cIndicatorsKeyword_0_1; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_0_2() { return cOpSingleAssignParserRuleCall_0_2; }

		//indicators=IndicatorArray
		public Assignment getIndicatorsAssignment_0_3() { return cIndicatorsAssignment_0_3; }

		//IndicatorArray
		public RuleCall getIndicatorsIndicatorArrayParserRuleCall_0_3_0() { return cIndicatorsIndicatorArrayParserRuleCall_0_3_0; }

		//"significance" OpSingleAssign significance=XNumberLiteral
		public Group getGroup_1() { return cGroup_1; }

		//"significance"
		public Keyword getSignificanceKeyword_1_0() { return cSignificanceKeyword_1_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_1_1() { return cOpSingleAssignParserRuleCall_1_1; }

		//significance=XNumberLiteral
		public Assignment getSignificanceAssignment_1_2() { return cSignificanceAssignment_1_2; }

		//XNumberLiteral
		public RuleCall getSignificanceXNumberLiteralParserRuleCall_1_2_0() { return cSignificanceXNumberLiteralParserRuleCall_1_2_0; }

		//"show" OpSingleAssign show=ShowArray
		public Group getGroup_2() { return cGroup_2; }

		//"show"
		public Keyword getShowKeyword_2_0() { return cShowKeyword_2_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_2_1() { return cOpSingleAssignParserRuleCall_2_1; }

		//show=ShowArray
		public Assignment getShowAssignment_2_2() { return cShowAssignment_2_2; }

		//ShowArray
		public RuleCall getShowShowArrayParserRuleCall_2_2_0() { return cShowShowArrayParserRuleCall_2_2_0; }

		//("grouping" OpSingleAssign grouping=AnalysisGroupList)?
		public Group getGroup_3() { return cGroup_3; }

		//"grouping"
		public Keyword getGroupingKeyword_3_0() { return cGroupingKeyword_3_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_3_1() { return cOpSingleAssignParserRuleCall_3_1; }

		//grouping=AnalysisGroupList
		public Assignment getGroupingAssignment_3_2() { return cGroupingAssignment_3_2; }

		//AnalysisGroupList
		public RuleCall getGroupingAnalysisGroupListParserRuleCall_3_2_0() { return cGroupingAnalysisGroupListParserRuleCall_3_2_0; }

		//saveCommand=SaveAnalysisCommand?
		public Assignment getSaveCommandAssignment_4() { return cSaveCommandAssignment_4; }

		//SaveAnalysisCommand
		public RuleCall getSaveCommandSaveAnalysisCommandParserRuleCall_4_0() { return cSaveCommandSaveAnalysisCommandParserRuleCall_4_0; }

		//boxplotCommand=BoxplotCommand?
		public Assignment getBoxplotCommandAssignment_5() { return cBoxplotCommandAssignment_5; }

		//BoxplotCommand
		public RuleCall getBoxplotCommandBoxplotCommandParserRuleCall_5_0() { return cBoxplotCommandBoxplotCommandParserRuleCall_5_0; }

		//printCommand=PrintAnalysisCommand? "}"
		public Group getGroup_6() { return cGroup_6; }

		//printCommand=PrintAnalysisCommand?
		public Assignment getPrintCommandAssignment_6_0() { return cPrintCommandAssignment_6_0; }

		//PrintAnalysisCommand
		public RuleCall getPrintCommandPrintAnalysisCommandParserRuleCall_6_0_0() { return cPrintCommandPrintAnalysisCommandParserRuleCall_6_0_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6_1() { return cRightCurlyBracketKeyword_6_1; }
	}

	public class AnalysisGroupListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.AnalysisGroupList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cGroupAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cGroupAnalysisGroupSpecificationParserRuleCall_1_0 = (RuleCall)cGroupAssignment_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//AnalysisGroupList:
		//	"{" group+=AnalysisGroupSpecification+ "}";
		@Override public ParserRule getRule() { return rule; }

		//"{" group+=AnalysisGroupSpecification+ "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//group+=AnalysisGroupSpecification+
		public Assignment getGroupAssignment_1() { return cGroupAssignment_1; }

		//AnalysisGroupSpecification
		public RuleCall getGroupAnalysisGroupSpecificationParserRuleCall_1_0() { return cGroupAnalysisGroupSpecificationParserRuleCall_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}

	public class IndicatorArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.IndicatorArray");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIndicatorArrayAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Assignment cHypervolumeAssignment_2_0 = (Assignment)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cHypervolumeHypervolumeKeyword_2_0_0 = (Keyword)cHypervolumeAssignment_2_0.eContents().get(0);
		private final Assignment cGenerationalDistanceAssignment_2_1 = (Assignment)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cGenerationalDistanceGenerationalDistanceKeyword_2_1_0 = (Keyword)cGenerationalDistanceAssignment_2_1.eContents().get(0);
		private final Assignment cInvertedGenerationalDistanceAssignment_2_2 = (Assignment)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cInvertedGenerationalDistanceInvertedGenerationalDistanceKeyword_2_2_0 = (Keyword)cInvertedGenerationalDistanceAssignment_2_2.eContents().get(0);
		private final Assignment cSpacingAssignment_2_3 = (Assignment)cUnorderedGroup_2.eContents().get(3);
		private final Keyword cSpacingSpacingKeyword_2_3_0 = (Keyword)cSpacingAssignment_2_3.eContents().get(0);
		private final Assignment cAdditiveEpsilonIndicatorAssignment_2_4 = (Assignment)cUnorderedGroup_2.eContents().get(4);
		private final Keyword cAdditiveEpsilonIndicatorAdditiveEpsilonIndicatorKeyword_2_4_0 = (Keyword)cAdditiveEpsilonIndicatorAssignment_2_4.eContents().get(0);
		private final Assignment cContributionAssignment_2_5 = (Assignment)cUnorderedGroup_2.eContents().get(5);
		private final Keyword cContributionContributionKeyword_2_5_0 = (Keyword)cContributionAssignment_2_5.eContents().get(0);
		private final Assignment cR1Assignment_2_6 = (Assignment)cUnorderedGroup_2.eContents().get(6);
		private final Keyword cR1R1Keyword_2_6_0 = (Keyword)cR1Assignment_2_6.eContents().get(0);
		private final Assignment cR2Assignment_2_7 = (Assignment)cUnorderedGroup_2.eContents().get(7);
		private final Keyword cR2R2Keyword_2_7_0 = (Keyword)cR2Assignment_2_7.eContents().get(0);
		private final Assignment cR3Assignment_2_8 = (Assignment)cUnorderedGroup_2.eContents().get(8);
		private final Keyword cR3R3Keyword_2_8_0 = (Keyword)cR3Assignment_2_8.eContents().get(0);
		private final Assignment cMaximumParetoFrontErrorAssignment_2_9 = (Assignment)cUnorderedGroup_2.eContents().get(9);
		private final Keyword cMaximumParetoFrontErrorMaximumParetoFrontErrorKeyword_2_9_0 = (Keyword)cMaximumParetoFrontErrorAssignment_2_9.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//IndicatorArray:
		//	{IndicatorArray}
		//	"[" (hypervolume?="hypervolume"? & generationalDistance?="generationalDistance"? &
		//	invertedGenerationalDistance?="invertedGenerationalDistance"? & spacing?="spacing"? &
		//	additiveEpsilonIndicator?="additiveEpsilonIndicator"? & contribution?="contribution"? & r1?="R1"? & r2?="R2"? &
		//	r3?="R3"? & maximumParetoFrontError?="maximumParetoFrontError"?)
		//	"]";
		@Override public ParserRule getRule() { return rule; }

		//{IndicatorArray} "[" (hypervolume?="hypervolume"? & generationalDistance?="generationalDistance"? &
		//invertedGenerationalDistance?="invertedGenerationalDistance"? & spacing?="spacing"? &
		//additiveEpsilonIndicator?="additiveEpsilonIndicator"? & contribution?="contribution"? & r1?="R1"? & r2?="R2"? &
		//r3?="R3"? & maximumParetoFrontError?="maximumParetoFrontError"?) "]"
		public Group getGroup() { return cGroup; }

		//{IndicatorArray}
		public Action getIndicatorArrayAction_0() { return cIndicatorArrayAction_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//hypervolume?="hypervolume"? & generationalDistance?="generationalDistance"? &
		//invertedGenerationalDistance?="invertedGenerationalDistance"? & spacing?="spacing"? &
		//additiveEpsilonIndicator?="additiveEpsilonIndicator"? & contribution?="contribution"? & r1?="R1"? & r2?="R2"? &
		//r3?="R3"? & maximumParetoFrontError?="maximumParetoFrontError"?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }

		//hypervolume?="hypervolume"?
		public Assignment getHypervolumeAssignment_2_0() { return cHypervolumeAssignment_2_0; }

		//"hypervolume"
		public Keyword getHypervolumeHypervolumeKeyword_2_0_0() { return cHypervolumeHypervolumeKeyword_2_0_0; }

		//generationalDistance?="generationalDistance"?
		public Assignment getGenerationalDistanceAssignment_2_1() { return cGenerationalDistanceAssignment_2_1; }

		//"generationalDistance"
		public Keyword getGenerationalDistanceGenerationalDistanceKeyword_2_1_0() { return cGenerationalDistanceGenerationalDistanceKeyword_2_1_0; }

		//invertedGenerationalDistance?="invertedGenerationalDistance"?
		public Assignment getInvertedGenerationalDistanceAssignment_2_2() { return cInvertedGenerationalDistanceAssignment_2_2; }

		//"invertedGenerationalDistance"
		public Keyword getInvertedGenerationalDistanceInvertedGenerationalDistanceKeyword_2_2_0() { return cInvertedGenerationalDistanceInvertedGenerationalDistanceKeyword_2_2_0; }

		//spacing?="spacing"?
		public Assignment getSpacingAssignment_2_3() { return cSpacingAssignment_2_3; }

		//"spacing"
		public Keyword getSpacingSpacingKeyword_2_3_0() { return cSpacingSpacingKeyword_2_3_0; }

		//additiveEpsilonIndicator?="additiveEpsilonIndicator"?
		public Assignment getAdditiveEpsilonIndicatorAssignment_2_4() { return cAdditiveEpsilonIndicatorAssignment_2_4; }

		//"additiveEpsilonIndicator"
		public Keyword getAdditiveEpsilonIndicatorAdditiveEpsilonIndicatorKeyword_2_4_0() { return cAdditiveEpsilonIndicatorAdditiveEpsilonIndicatorKeyword_2_4_0; }

		//contribution?="contribution"?
		public Assignment getContributionAssignment_2_5() { return cContributionAssignment_2_5; }

		//"contribution"
		public Keyword getContributionContributionKeyword_2_5_0() { return cContributionContributionKeyword_2_5_0; }

		//r1?="R1"?
		public Assignment getR1Assignment_2_6() { return cR1Assignment_2_6; }

		//"R1"
		public Keyword getR1R1Keyword_2_6_0() { return cR1R1Keyword_2_6_0; }

		//r2?="R2"?
		public Assignment getR2Assignment_2_7() { return cR2Assignment_2_7; }

		//"R2"
		public Keyword getR2R2Keyword_2_7_0() { return cR2R2Keyword_2_7_0; }

		//r3?="R3"?
		public Assignment getR3Assignment_2_8() { return cR3Assignment_2_8; }

		//"R3"
		public Keyword getR3R3Keyword_2_8_0() { return cR3R3Keyword_2_8_0; }

		//maximumParetoFrontError?="maximumParetoFrontError"?
		public Assignment getMaximumParetoFrontErrorAssignment_2_9() { return cMaximumParetoFrontErrorAssignment_2_9; }

		//"maximumParetoFrontError"
		public Keyword getMaximumParetoFrontErrorMaximumParetoFrontErrorKeyword_2_9_0() { return cMaximumParetoFrontErrorMaximumParetoFrontErrorKeyword_2_9_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}

	public class ShowArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.ShowArray");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cShowArrayAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Assignment cIndividualAssignment_2_0 = (Assignment)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cIndividualIndividualValuesKeyword_2_0_0 = (Keyword)cIndividualAssignment_2_0.eContents().get(0);
		private final Assignment cAggregateAssignment_2_1 = (Assignment)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cAggregateAggregateValuesKeyword_2_1_0 = (Keyword)cAggregateAssignment_2_1.eContents().get(0);
		private final Assignment cStatisticalSignificanceAssignment_2_2 = (Assignment)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cStatisticalSignificanceStatisticalSignificanceKeyword_2_2_0 = (Keyword)cStatisticalSignificanceAssignment_2_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ShowArray:
		//	{ShowArray}
		//	"[" (individual?="individualValues"? & aggregate?="aggregateValues"? &
		//	statisticalSignificance?="statisticalSignificance"?)
		//	"]";
		@Override public ParserRule getRule() { return rule; }

		//{ShowArray} "[" (individual?="individualValues"? & aggregate?="aggregateValues"? &
		//statisticalSignificance?="statisticalSignificance"?) "]"
		public Group getGroup() { return cGroup; }

		//{ShowArray}
		public Action getShowArrayAction_0() { return cShowArrayAction_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//individual?="individualValues"? & aggregate?="aggregateValues"? & statisticalSignificance?="statisticalSignificance"?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }

		//individual?="individualValues"?
		public Assignment getIndividualAssignment_2_0() { return cIndividualAssignment_2_0; }

		//"individualValues"
		public Keyword getIndividualIndividualValuesKeyword_2_0_0() { return cIndividualIndividualValuesKeyword_2_0_0; }

		//aggregate?="aggregateValues"?
		public Assignment getAggregateAssignment_2_1() { return cAggregateAssignment_2_1; }

		//"aggregateValues"
		public Keyword getAggregateAggregateValuesKeyword_2_1_0() { return cAggregateAggregateValuesKeyword_2_1_0; }

		//statisticalSignificance?="statisticalSignificance"?
		public Assignment getStatisticalSignificanceAssignment_2_2() { return cStatisticalSignificanceAssignment_2_2; }

		//"statisticalSignificance"
		public Keyword getStatisticalSignificanceStatisticalSignificanceKeyword_2_2_0() { return cStatisticalSignificanceStatisticalSignificanceKeyword_2_2_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}

	public class AnalysisGroupSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.AnalysisGroupSpecification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAnalysisGroupSpecificationAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final RuleCall cOpKeyAssignParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cAlgorithmsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAlgorithmsAlgorithmReferencesParserRuleCall_3_0 = (RuleCall)cAlgorithmsAssignment_3.eContents().get(0);
		
		//AnalysisGroupSpecification:
		//	{AnalysisGroupSpecification} name=ValidID OpKeyAssign algorithms=AlgorithmReferences;
		@Override public ParserRule getRule() { return rule; }

		//{AnalysisGroupSpecification} name=ValidID OpKeyAssign algorithms=AlgorithmReferences
		public Group getGroup() { return cGroup; }

		//{AnalysisGroupSpecification}
		public Action getAnalysisGroupSpecificationAction_0() { return cAnalysisGroupSpecificationAction_0; }

		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }

		//OpKeyAssign
		public RuleCall getOpKeyAssignParserRuleCall_2() { return cOpKeyAssignParserRuleCall_2; }

		//algorithms=AlgorithmReferences
		public Assignment getAlgorithmsAssignment_3() { return cAlgorithmsAssignment_3; }

		//AlgorithmReferences
		public RuleCall getAlgorithmsAlgorithmReferencesParserRuleCall_3_0() { return cAlgorithmsAlgorithmReferencesParserRuleCall_3_0; }
	}

	public class AlgorithmReferencesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.AlgorithmReferences");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAlgorithmReferencesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cElementsAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final CrossReference cElementsAlgorithmSpecificationCrossReference_2_0_0 = (CrossReference)cElementsAssignment_2_0.eContents().get(0);
		private final RuleCall cElementsAlgorithmSpecificationIDTerminalRuleCall_2_0_0_1 = (RuleCall)cElementsAlgorithmSpecificationCrossReference_2_0_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cElementsAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final CrossReference cElementsAlgorithmSpecificationCrossReference_2_1_1_0 = (CrossReference)cElementsAssignment_2_1_1.eContents().get(0);
		private final RuleCall cElementsAlgorithmSpecificationIDTerminalRuleCall_2_1_1_0_1 = (RuleCall)cElementsAlgorithmSpecificationCrossReference_2_1_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//AlgorithmReferences:
		//	{AlgorithmReferences}
		//	"[" (elements+=[AlgorithmSpecification] (',' elements+=[AlgorithmSpecification])*)? "]";
		@Override public ParserRule getRule() { return rule; }

		//{AlgorithmReferences} "[" (elements+=[AlgorithmSpecification] (',' elements+=[AlgorithmSpecification])*)? "]"
		public Group getGroup() { return cGroup; }

		//{AlgorithmReferences}
		public Action getAlgorithmReferencesAction_0() { return cAlgorithmReferencesAction_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//(elements+=[AlgorithmSpecification] (',' elements+=[AlgorithmSpecification])*)?
		public Group getGroup_2() { return cGroup_2; }

		//elements+=[AlgorithmSpecification]
		public Assignment getElementsAssignment_2_0() { return cElementsAssignment_2_0; }

		//[AlgorithmSpecification]
		public CrossReference getElementsAlgorithmSpecificationCrossReference_2_0_0() { return cElementsAlgorithmSpecificationCrossReference_2_0_0; }

		//ID
		public RuleCall getElementsAlgorithmSpecificationIDTerminalRuleCall_2_0_0_1() { return cElementsAlgorithmSpecificationIDTerminalRuleCall_2_0_0_1; }

		//(',' elements+=[AlgorithmSpecification])*
		public Group getGroup_2_1() { return cGroup_2_1; }

		//','
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }

		//elements+=[AlgorithmSpecification]
		public Assignment getElementsAssignment_2_1_1() { return cElementsAssignment_2_1_1; }

		//[AlgorithmSpecification]
		public CrossReference getElementsAlgorithmSpecificationCrossReference_2_1_1_0() { return cElementsAlgorithmSpecificationCrossReference_2_1_1_0; }

		//ID
		public RuleCall getElementsAlgorithmSpecificationIDTerminalRuleCall_2_1_1_0_1() { return cElementsAlgorithmSpecificationIDTerminalRuleCall_2_1_1_0_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}

	public class AnalysisCommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.AnalysisCommand");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPrintAnalysisCommandParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSaveAnalysisCommandParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cBoxplotCommandParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//AnalysisCommand:
		//	PrintAnalysisCommand | SaveAnalysisCommand | BoxplotCommand;
		@Override public ParserRule getRule() { return rule; }

		//PrintAnalysisCommand | SaveAnalysisCommand | BoxplotCommand
		public Alternatives getAlternatives() { return cAlternatives; }

		//PrintAnalysisCommand
		public RuleCall getPrintAnalysisCommandParserRuleCall_0() { return cPrintAnalysisCommandParserRuleCall_0; }

		//SaveAnalysisCommand
		public RuleCall getSaveAnalysisCommandParserRuleCall_1() { return cSaveAnalysisCommandParserRuleCall_1; }

		//BoxplotCommand
		public RuleCall getBoxplotCommandParserRuleCall_2() { return cBoxplotCommandParserRuleCall_2; }
	}

	public class PrintAnalysisCommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.PrintAnalysisCommand");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPrintAnalysisCommandAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPrintOutputKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//PrintAnalysisCommand:
		//	{PrintAnalysisCommand}
		//	"printOutput";
		@Override public ParserRule getRule() { return rule; }

		//{PrintAnalysisCommand} "printOutput"
		public Group getGroup() { return cGroup; }

		//{PrintAnalysisCommand}
		public Action getPrintAnalysisCommandAction_0() { return cPrintAnalysisCommandAction_0; }

		//"printOutput"
		public Keyword getPrintOutputKeyword_1() { return cPrintOutputKeyword_1; }
	}

	public class SaveAnalysisCommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.SaveAnalysisCommand");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOutputFileKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cFileAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFileXStringLiteralParserRuleCall_2_0 = (RuleCall)cFileAssignment_2.eContents().get(0);
		
		//SaveAnalysisCommand:
		//	"outputFile" OpSingleAssign file=XStringLiteral;
		@Override public ParserRule getRule() { return rule; }

		//"outputFile" OpSingleAssign file=XStringLiteral
		public Group getGroup() { return cGroup; }

		//"outputFile"
		public Keyword getOutputFileKeyword_0() { return cOutputFileKeyword_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_1() { return cOpSingleAssignParserRuleCall_1; }

		//file=XStringLiteral
		public Assignment getFileAssignment_2() { return cFileAssignment_2; }

		//XStringLiteral
		public RuleCall getFileXStringLiteralParserRuleCall_2_0() { return cFileXStringLiteralParserRuleCall_2_0; }
	}

	public class BoxplotCommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.BoxplotCommand");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBoxplotDirectoryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cDirectoryAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDirectoryXStringLiteralParserRuleCall_2_0 = (RuleCall)cDirectoryAssignment_2.eContents().get(0);
		
		//BoxplotCommand:
		//	"boxplotDirectory" OpSingleAssign directory=XStringLiteral;
		@Override public ParserRule getRule() { return rule; }

		//"boxplotDirectory" OpSingleAssign directory=XStringLiteral
		public Group getGroup() { return cGroup; }

		//"boxplotDirectory"
		public Keyword getBoxplotDirectoryKeyword_0() { return cBoxplotDirectoryKeyword_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_1() { return cOpSingleAssignParserRuleCall_1; }

		//directory=XStringLiteral
		public Assignment getDirectoryAssignment_2() { return cDirectoryAssignment_2; }

		//XStringLiteral
		public RuleCall getDirectoryXStringLiteralParserRuleCall_2_0() { return cDirectoryXStringLiteralParserRuleCall_2_0; }
	}

	public class ResultManagementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.ResultManagement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cResultManagementAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cAdaptModelsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Assignment cAdaptModelsAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cAdaptModelsXBlockExpressionParserRuleCall_2_2_0 = (RuleCall)cAdaptModelsAssignment_2_2.eContents().get(0);
		private final Assignment cCommandsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCommandsResultManagementCommandParserRuleCall_3_0 = (RuleCall)cCommandsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ResultManagement:
		//	{ResultManagement}
		//	"{" ("adaptModels" OpSingleAssign adaptModels=XBlockExpression)?
		//	commands+=ResultManagementCommand+
		//	"}";
		@Override public ParserRule getRule() { return rule; }

		//{ResultManagement} "{" ("adaptModels" OpSingleAssign adaptModels=XBlockExpression)? commands+=ResultManagementCommand+
		//"}"
		public Group getGroup() { return cGroup; }

		//{ResultManagement}
		public Action getResultManagementAction_0() { return cResultManagementAction_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//("adaptModels" OpSingleAssign adaptModels=XBlockExpression)?
		public Group getGroup_2() { return cGroup_2; }

		//"adaptModels"
		public Keyword getAdaptModelsKeyword_2_0() { return cAdaptModelsKeyword_2_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_2_1() { return cOpSingleAssignParserRuleCall_2_1; }

		//adaptModels=XBlockExpression
		public Assignment getAdaptModelsAssignment_2_2() { return cAdaptModelsAssignment_2_2; }

		//XBlockExpression
		public RuleCall getAdaptModelsXBlockExpressionParserRuleCall_2_2_0() { return cAdaptModelsXBlockExpressionParserRuleCall_2_2_0; }

		//commands+=ResultManagementCommand+
		public Assignment getCommandsAssignment_3() { return cCommandsAssignment_3; }

		//ResultManagementCommand
		public RuleCall getCommandsResultManagementCommandParserRuleCall_3_0() { return cCommandsResultManagementCommandParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class ResultManagementCommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.ResultManagementCommand");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cObjectivesCommandParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSolutionsCommandParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cModelsCommandParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ResultManagementCommand:
		//	ObjectivesCommand | SolutionsCommand | ModelsCommand;
		@Override public ParserRule getRule() { return rule; }

		//ObjectivesCommand | SolutionsCommand | ModelsCommand
		public Alternatives getAlternatives() { return cAlternatives; }

		//ObjectivesCommand
		public RuleCall getObjectivesCommandParserRuleCall_0() { return cObjectivesCommandParserRuleCall_0; }

		//SolutionsCommand
		public RuleCall getSolutionsCommandParserRuleCall_1() { return cSolutionsCommandParserRuleCall_1; }

		//ModelsCommand
		public RuleCall getModelsCommandParserRuleCall_2() { return cModelsCommandParserRuleCall_2; }
	}

	public class ObjectivesCommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.ObjectivesCommand");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cObjectivesCommandAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cObjectivesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOpSingleAssignParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cUnorderedGroup_4.eContents().get(0);
		private final Keyword cAlgorithmsKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_4_0_1 = (RuleCall)cGroup_4_0.eContents().get(1);
		private final Assignment cAlgorithmsAssignment_4_0_2 = (Assignment)cGroup_4_0.eContents().get(2);
		private final RuleCall cAlgorithmsAlgorithmReferencesParserRuleCall_4_0_2_0 = (RuleCall)cAlgorithmsAssignment_4_0_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_4_1 = (UnorderedGroup)cUnorderedGroup_4.eContents().get(1);
		private final Group cGroup_4_1_0 = (Group)cUnorderedGroup_4_1.eContents().get(0);
		private final Keyword cNeighborhoodSizeKeyword_4_1_0_0 = (Keyword)cGroup_4_1_0.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_4_1_0_1 = (RuleCall)cGroup_4_1_0.eContents().get(1);
		private final Alternatives cAlternatives_4_1_1 = (Alternatives)cUnorderedGroup_4_1.eContents().get(1);
		private final Assignment cNeighborhoodSizeAssignment_4_1_1_0 = (Assignment)cAlternatives_4_1_1.eContents().get(0);
		private final RuleCall cNeighborhoodSizeINTTerminalRuleCall_4_1_1_0_0 = (RuleCall)cNeighborhoodSizeAssignment_4_1_1_0.eContents().get(0);
		private final Assignment cMaxNeighborhoodSizeAssignment_4_1_1_1 = (Assignment)cAlternatives_4_1_1.eContents().get(1);
		private final Keyword cMaxNeighborhoodSizeMaxNeighborhoodSizeKeyword_4_1_1_1_0 = (Keyword)cMaxNeighborhoodSizeAssignment_4_1_1_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cUnorderedGroup_4.eContents().get(2);
		private final Keyword cOutputFileKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_4_2_1 = (RuleCall)cGroup_4_2.eContents().get(1);
		private final Assignment cFileAssignment_4_2_2 = (Assignment)cGroup_4_2.eContents().get(2);
		private final RuleCall cFileSTRINGTerminalRuleCall_4_2_2_0 = (RuleCall)cFileAssignment_4_2_2.eContents().get(0);
		private final Assignment cPrintOutputAssignment_4_3 = (Assignment)cUnorderedGroup_4.eContents().get(3);
		private final Keyword cPrintOutputPrintOutputKeyword_4_3_0 = (Keyword)cPrintOutputAssignment_4_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ObjectivesCommand:
		//	{ObjectivesCommand}
		//	"objectives" OpSingleAssign "{" (("algorithms" OpSingleAssign algorithms=AlgorithmReferences)? & ("neighborhoodSize"
		//	OpSingleAssign & (neighborhoodSize=INT | maxNeighborhoodSize?="maxNeighborhoodSize"))? & ("outputFile" OpSingleAssign
		//	file=STRING)? & printOutput?="printOutput"?)
		//	"}";
		@Override public ParserRule getRule() { return rule; }

		//{ObjectivesCommand} "objectives" OpSingleAssign "{" (("algorithms" OpSingleAssign algorithms=AlgorithmReferences)? &
		//("neighborhoodSize" OpSingleAssign & (neighborhoodSize=INT | maxNeighborhoodSize?="maxNeighborhoodSize"))? &
		//("outputFile" OpSingleAssign file=STRING)? & printOutput?="printOutput"?) "}"
		public Group getGroup() { return cGroup; }

		//{ObjectivesCommand}
		public Action getObjectivesCommandAction_0() { return cObjectivesCommandAction_0; }

		//"objectives"
		public Keyword getObjectivesKeyword_1() { return cObjectivesKeyword_1; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_2() { return cOpSingleAssignParserRuleCall_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("algorithms" OpSingleAssign algorithms=AlgorithmReferences)? & ("neighborhoodSize" OpSingleAssign &
		//(neighborhoodSize=INT | maxNeighborhoodSize?="maxNeighborhoodSize"))? & ("outputFile" OpSingleAssign file=STRING)? &
		//printOutput?="printOutput"?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }

		//("algorithms" OpSingleAssign algorithms=AlgorithmReferences)?
		public Group getGroup_4_0() { return cGroup_4_0; }

		//"algorithms"
		public Keyword getAlgorithmsKeyword_4_0_0() { return cAlgorithmsKeyword_4_0_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_4_0_1() { return cOpSingleAssignParserRuleCall_4_0_1; }

		//algorithms=AlgorithmReferences
		public Assignment getAlgorithmsAssignment_4_0_2() { return cAlgorithmsAssignment_4_0_2; }

		//AlgorithmReferences
		public RuleCall getAlgorithmsAlgorithmReferencesParserRuleCall_4_0_2_0() { return cAlgorithmsAlgorithmReferencesParserRuleCall_4_0_2_0; }

		//("neighborhoodSize" OpSingleAssign & (neighborhoodSize=INT | maxNeighborhoodSize?="maxNeighborhoodSize"))?
		public UnorderedGroup getUnorderedGroup_4_1() { return cUnorderedGroup_4_1; }

		//"neighborhoodSize" OpSingleAssign
		public Group getGroup_4_1_0() { return cGroup_4_1_0; }

		//"neighborhoodSize"
		public Keyword getNeighborhoodSizeKeyword_4_1_0_0() { return cNeighborhoodSizeKeyword_4_1_0_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_4_1_0_1() { return cOpSingleAssignParserRuleCall_4_1_0_1; }

		//(neighborhoodSize=INT | maxNeighborhoodSize?="maxNeighborhoodSize")
		public Alternatives getAlternatives_4_1_1() { return cAlternatives_4_1_1; }

		//neighborhoodSize=INT
		public Assignment getNeighborhoodSizeAssignment_4_1_1_0() { return cNeighborhoodSizeAssignment_4_1_1_0; }

		//INT
		public RuleCall getNeighborhoodSizeINTTerminalRuleCall_4_1_1_0_0() { return cNeighborhoodSizeINTTerminalRuleCall_4_1_1_0_0; }

		//maxNeighborhoodSize?="maxNeighborhoodSize"
		public Assignment getMaxNeighborhoodSizeAssignment_4_1_1_1() { return cMaxNeighborhoodSizeAssignment_4_1_1_1; }

		//"maxNeighborhoodSize"
		public Keyword getMaxNeighborhoodSizeMaxNeighborhoodSizeKeyword_4_1_1_1_0() { return cMaxNeighborhoodSizeMaxNeighborhoodSizeKeyword_4_1_1_1_0; }

		//("outputFile" OpSingleAssign file=STRING)?
		public Group getGroup_4_2() { return cGroup_4_2; }

		//"outputFile"
		public Keyword getOutputFileKeyword_4_2_0() { return cOutputFileKeyword_4_2_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_4_2_1() { return cOpSingleAssignParserRuleCall_4_2_1; }

		//file=STRING
		public Assignment getFileAssignment_4_2_2() { return cFileAssignment_4_2_2; }

		//STRING
		public RuleCall getFileSTRINGTerminalRuleCall_4_2_2_0() { return cFileSTRINGTerminalRuleCall_4_2_2_0; }

		//printOutput?="printOutput"?
		public Assignment getPrintOutputAssignment_4_3() { return cPrintOutputAssignment_4_3; }

		//"printOutput"
		public Keyword getPrintOutputPrintOutputKeyword_4_3_0() { return cPrintOutputPrintOutputKeyword_4_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class SolutionsCommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.SolutionsCommand");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSolutionsCommandAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSolutionsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOpSingleAssignParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cUnorderedGroup_4.eContents().get(0);
		private final Keyword cAlgorithmsKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_4_0_1 = (RuleCall)cGroup_4_0.eContents().get(1);
		private final Assignment cAlgorithmsAssignment_4_0_2 = (Assignment)cGroup_4_0.eContents().get(2);
		private final RuleCall cAlgorithmsAlgorithmReferencesParserRuleCall_4_0_2_0 = (RuleCall)cAlgorithmsAssignment_4_0_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_4_1 = (UnorderedGroup)cUnorderedGroup_4.eContents().get(1);
		private final Group cGroup_4_1_0 = (Group)cUnorderedGroup_4_1.eContents().get(0);
		private final Keyword cNeighborhoodSizeKeyword_4_1_0_0 = (Keyword)cGroup_4_1_0.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_4_1_0_1 = (RuleCall)cGroup_4_1_0.eContents().get(1);
		private final Alternatives cAlternatives_4_1_1 = (Alternatives)cUnorderedGroup_4_1.eContents().get(1);
		private final Assignment cNeighborhoodSizeAssignment_4_1_1_0 = (Assignment)cAlternatives_4_1_1.eContents().get(0);
		private final RuleCall cNeighborhoodSizeINTTerminalRuleCall_4_1_1_0_0 = (RuleCall)cNeighborhoodSizeAssignment_4_1_1_0.eContents().get(0);
		private final Assignment cMaxNeighborhoodSizeAssignment_4_1_1_1 = (Assignment)cAlternatives_4_1_1.eContents().get(1);
		private final Keyword cMaxNeighborhoodSizeMaxNeighborhoodSizeKeyword_4_1_1_1_0 = (Keyword)cMaxNeighborhoodSizeAssignment_4_1_1_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cUnorderedGroup_4.eContents().get(2);
		private final Keyword cOutputFileKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_4_2_1 = (RuleCall)cGroup_4_2.eContents().get(1);
		private final Assignment cFileAssignment_4_2_2 = (Assignment)cGroup_4_2.eContents().get(2);
		private final RuleCall cFileSTRINGTerminalRuleCall_4_2_2_0 = (RuleCall)cFileAssignment_4_2_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cUnorderedGroup_4.eContents().get(3);
		private final Keyword cOutputDirectoryKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_4_3_1 = (RuleCall)cGroup_4_3.eContents().get(1);
		private final Assignment cDirectoryAssignment_4_3_2 = (Assignment)cGroup_4_3.eContents().get(2);
		private final RuleCall cDirectorySTRINGTerminalRuleCall_4_3_2_0 = (RuleCall)cDirectoryAssignment_4_3_2.eContents().get(0);
		private final Assignment cPrintOutputAssignment_4_4 = (Assignment)cUnorderedGroup_4.eContents().get(4);
		private final Keyword cPrintOutputPrintOutputKeyword_4_4_0 = (Keyword)cPrintOutputAssignment_4_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//SolutionsCommand:
		//	{SolutionsCommand}
		//	"solutions" OpSingleAssign "{" (("algorithms" OpSingleAssign algorithms=AlgorithmReferences)? & ("neighborhoodSize"
		//	OpSingleAssign & (neighborhoodSize=INT | maxNeighborhoodSize?="maxNeighborhoodSize"))? & ("outputFile" OpSingleAssign
		//	file=STRING)? & ("outputDirectory" OpSingleAssign directory=STRING)? & printOutput?="printOutput"?)
		//	"}";
		@Override public ParserRule getRule() { return rule; }

		//{SolutionsCommand} "solutions" OpSingleAssign "{" (("algorithms" OpSingleAssign algorithms=AlgorithmReferences)? &
		//("neighborhoodSize" OpSingleAssign & (neighborhoodSize=INT | maxNeighborhoodSize?="maxNeighborhoodSize"))? &
		//("outputFile" OpSingleAssign file=STRING)? & ("outputDirectory" OpSingleAssign directory=STRING)? &
		//printOutput?="printOutput"?) "}"
		public Group getGroup() { return cGroup; }

		//{SolutionsCommand}
		public Action getSolutionsCommandAction_0() { return cSolutionsCommandAction_0; }

		//"solutions"
		public Keyword getSolutionsKeyword_1() { return cSolutionsKeyword_1; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_2() { return cOpSingleAssignParserRuleCall_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("algorithms" OpSingleAssign algorithms=AlgorithmReferences)? & ("neighborhoodSize" OpSingleAssign &
		//(neighborhoodSize=INT | maxNeighborhoodSize?="maxNeighborhoodSize"))? & ("outputFile" OpSingleAssign file=STRING)? &
		//("outputDirectory" OpSingleAssign directory=STRING)? & printOutput?="printOutput"?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }

		//("algorithms" OpSingleAssign algorithms=AlgorithmReferences)?
		public Group getGroup_4_0() { return cGroup_4_0; }

		//"algorithms"
		public Keyword getAlgorithmsKeyword_4_0_0() { return cAlgorithmsKeyword_4_0_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_4_0_1() { return cOpSingleAssignParserRuleCall_4_0_1; }

		//algorithms=AlgorithmReferences
		public Assignment getAlgorithmsAssignment_4_0_2() { return cAlgorithmsAssignment_4_0_2; }

		//AlgorithmReferences
		public RuleCall getAlgorithmsAlgorithmReferencesParserRuleCall_4_0_2_0() { return cAlgorithmsAlgorithmReferencesParserRuleCall_4_0_2_0; }

		//("neighborhoodSize" OpSingleAssign & (neighborhoodSize=INT | maxNeighborhoodSize?="maxNeighborhoodSize"))?
		public UnorderedGroup getUnorderedGroup_4_1() { return cUnorderedGroup_4_1; }

		//"neighborhoodSize" OpSingleAssign
		public Group getGroup_4_1_0() { return cGroup_4_1_0; }

		//"neighborhoodSize"
		public Keyword getNeighborhoodSizeKeyword_4_1_0_0() { return cNeighborhoodSizeKeyword_4_1_0_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_4_1_0_1() { return cOpSingleAssignParserRuleCall_4_1_0_1; }

		//(neighborhoodSize=INT | maxNeighborhoodSize?="maxNeighborhoodSize")
		public Alternatives getAlternatives_4_1_1() { return cAlternatives_4_1_1; }

		//neighborhoodSize=INT
		public Assignment getNeighborhoodSizeAssignment_4_1_1_0() { return cNeighborhoodSizeAssignment_4_1_1_0; }

		//INT
		public RuleCall getNeighborhoodSizeINTTerminalRuleCall_4_1_1_0_0() { return cNeighborhoodSizeINTTerminalRuleCall_4_1_1_0_0; }

		//maxNeighborhoodSize?="maxNeighborhoodSize"
		public Assignment getMaxNeighborhoodSizeAssignment_4_1_1_1() { return cMaxNeighborhoodSizeAssignment_4_1_1_1; }

		//"maxNeighborhoodSize"
		public Keyword getMaxNeighborhoodSizeMaxNeighborhoodSizeKeyword_4_1_1_1_0() { return cMaxNeighborhoodSizeMaxNeighborhoodSizeKeyword_4_1_1_1_0; }

		//("outputFile" OpSingleAssign file=STRING)?
		public Group getGroup_4_2() { return cGroup_4_2; }

		//"outputFile"
		public Keyword getOutputFileKeyword_4_2_0() { return cOutputFileKeyword_4_2_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_4_2_1() { return cOpSingleAssignParserRuleCall_4_2_1; }

		//file=STRING
		public Assignment getFileAssignment_4_2_2() { return cFileAssignment_4_2_2; }

		//STRING
		public RuleCall getFileSTRINGTerminalRuleCall_4_2_2_0() { return cFileSTRINGTerminalRuleCall_4_2_2_0; }

		//("outputDirectory" OpSingleAssign directory=STRING)?
		public Group getGroup_4_3() { return cGroup_4_3; }

		//"outputDirectory"
		public Keyword getOutputDirectoryKeyword_4_3_0() { return cOutputDirectoryKeyword_4_3_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_4_3_1() { return cOpSingleAssignParserRuleCall_4_3_1; }

		//directory=STRING
		public Assignment getDirectoryAssignment_4_3_2() { return cDirectoryAssignment_4_3_2; }

		//STRING
		public RuleCall getDirectorySTRINGTerminalRuleCall_4_3_2_0() { return cDirectorySTRINGTerminalRuleCall_4_3_2_0; }

		//printOutput?="printOutput"?
		public Assignment getPrintOutputAssignment_4_4() { return cPrintOutputAssignment_4_4; }

		//"printOutput"
		public Keyword getPrintOutputPrintOutputKeyword_4_4_0() { return cPrintOutputPrintOutputKeyword_4_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ModelsCommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.ModelsCommand");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cModelsCommandAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cModelsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOpSingleAssignParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cUnorderedGroup_4.eContents().get(0);
		private final Keyword cAlgorithmsKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_4_0_1 = (RuleCall)cGroup_4_0.eContents().get(1);
		private final Assignment cAlgorithmsAssignment_4_0_2 = (Assignment)cGroup_4_0.eContents().get(2);
		private final RuleCall cAlgorithmsAlgorithmReferencesParserRuleCall_4_0_2_0 = (RuleCall)cAlgorithmsAssignment_4_0_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_4_1 = (UnorderedGroup)cUnorderedGroup_4.eContents().get(1);
		private final Group cGroup_4_1_0 = (Group)cUnorderedGroup_4_1.eContents().get(0);
		private final Keyword cNeighborhoodSizeKeyword_4_1_0_0 = (Keyword)cGroup_4_1_0.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_4_1_0_1 = (RuleCall)cGroup_4_1_0.eContents().get(1);
		private final Alternatives cAlternatives_4_1_1 = (Alternatives)cUnorderedGroup_4_1.eContents().get(1);
		private final Assignment cNeighborhoodSizeAssignment_4_1_1_0 = (Assignment)cAlternatives_4_1_1.eContents().get(0);
		private final RuleCall cNeighborhoodSizeINTTerminalRuleCall_4_1_1_0_0 = (RuleCall)cNeighborhoodSizeAssignment_4_1_1_0.eContents().get(0);
		private final Assignment cMaxNeighborhoodSizeAssignment_4_1_1_1 = (Assignment)cAlternatives_4_1_1.eContents().get(1);
		private final Keyword cMaxNeighborhoodSizeMaxNeighborhoodSizeKeyword_4_1_1_1_0 = (Keyword)cMaxNeighborhoodSizeAssignment_4_1_1_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cUnorderedGroup_4.eContents().get(2);
		private final Keyword cOutputDirectoryKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final RuleCall cOpSingleAssignParserRuleCall_4_2_1 = (RuleCall)cGroup_4_2.eContents().get(1);
		private final Assignment cDirectoryAssignment_4_2_2 = (Assignment)cGroup_4_2.eContents().get(2);
		private final RuleCall cDirectorySTRINGTerminalRuleCall_4_2_2_0 = (RuleCall)cDirectoryAssignment_4_2_2.eContents().get(0);
		private final Assignment cPrintOutputAssignment_4_3 = (Assignment)cUnorderedGroup_4.eContents().get(3);
		private final Keyword cPrintOutputPrintOutputKeyword_4_3_0 = (Keyword)cPrintOutputAssignment_4_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ModelsCommand:
		//	{ModelsCommand}
		//	"models" OpSingleAssign "{" (("algorithms" OpSingleAssign algorithms=AlgorithmReferences)? & ("neighborhoodSize"
		//	OpSingleAssign & (neighborhoodSize=INT | maxNeighborhoodSize?="maxNeighborhoodSize"))? & ("outputDirectory"
		//	OpSingleAssign directory=STRING)? & printOutput?="printOutput"?)
		//	"}";
		@Override public ParserRule getRule() { return rule; }

		//{ModelsCommand} "models" OpSingleAssign "{" (("algorithms" OpSingleAssign algorithms=AlgorithmReferences)? &
		//("neighborhoodSize" OpSingleAssign & (neighborhoodSize=INT | maxNeighborhoodSize?="maxNeighborhoodSize"))? &
		//("outputDirectory" OpSingleAssign directory=STRING)? & printOutput?="printOutput"?) "}"
		public Group getGroup() { return cGroup; }

		//{ModelsCommand}
		public Action getModelsCommandAction_0() { return cModelsCommandAction_0; }

		//"models"
		public Keyword getModelsKeyword_1() { return cModelsKeyword_1; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_2() { return cOpSingleAssignParserRuleCall_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("algorithms" OpSingleAssign algorithms=AlgorithmReferences)? & ("neighborhoodSize" OpSingleAssign &
		//(neighborhoodSize=INT | maxNeighborhoodSize?="maxNeighborhoodSize"))? & ("outputDirectory" OpSingleAssign
		//directory=STRING)? & printOutput?="printOutput"?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }

		//("algorithms" OpSingleAssign algorithms=AlgorithmReferences)?
		public Group getGroup_4_0() { return cGroup_4_0; }

		//"algorithms"
		public Keyword getAlgorithmsKeyword_4_0_0() { return cAlgorithmsKeyword_4_0_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_4_0_1() { return cOpSingleAssignParserRuleCall_4_0_1; }

		//algorithms=AlgorithmReferences
		public Assignment getAlgorithmsAssignment_4_0_2() { return cAlgorithmsAssignment_4_0_2; }

		//AlgorithmReferences
		public RuleCall getAlgorithmsAlgorithmReferencesParserRuleCall_4_0_2_0() { return cAlgorithmsAlgorithmReferencesParserRuleCall_4_0_2_0; }

		//("neighborhoodSize" OpSingleAssign & (neighborhoodSize=INT | maxNeighborhoodSize?="maxNeighborhoodSize"))?
		public UnorderedGroup getUnorderedGroup_4_1() { return cUnorderedGroup_4_1; }

		//"neighborhoodSize" OpSingleAssign
		public Group getGroup_4_1_0() { return cGroup_4_1_0; }

		//"neighborhoodSize"
		public Keyword getNeighborhoodSizeKeyword_4_1_0_0() { return cNeighborhoodSizeKeyword_4_1_0_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_4_1_0_1() { return cOpSingleAssignParserRuleCall_4_1_0_1; }

		//(neighborhoodSize=INT | maxNeighborhoodSize?="maxNeighborhoodSize")
		public Alternatives getAlternatives_4_1_1() { return cAlternatives_4_1_1; }

		//neighborhoodSize=INT
		public Assignment getNeighborhoodSizeAssignment_4_1_1_0() { return cNeighborhoodSizeAssignment_4_1_1_0; }

		//INT
		public RuleCall getNeighborhoodSizeINTTerminalRuleCall_4_1_1_0_0() { return cNeighborhoodSizeINTTerminalRuleCall_4_1_1_0_0; }

		//maxNeighborhoodSize?="maxNeighborhoodSize"
		public Assignment getMaxNeighborhoodSizeAssignment_4_1_1_1() { return cMaxNeighborhoodSizeAssignment_4_1_1_1; }

		//"maxNeighborhoodSize"
		public Keyword getMaxNeighborhoodSizeMaxNeighborhoodSizeKeyword_4_1_1_1_0() { return cMaxNeighborhoodSizeMaxNeighborhoodSizeKeyword_4_1_1_1_0; }

		//("outputDirectory" OpSingleAssign directory=STRING)?
		public Group getGroup_4_2() { return cGroup_4_2; }

		//"outputDirectory"
		public Keyword getOutputDirectoryKeyword_4_2_0() { return cOutputDirectoryKeyword_4_2_0; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_4_2_1() { return cOpSingleAssignParserRuleCall_4_2_1; }

		//directory=STRING
		public Assignment getDirectoryAssignment_4_2_2() { return cDirectoryAssignment_4_2_2; }

		//STRING
		public RuleCall getDirectorySTRINGTerminalRuleCall_4_2_2_0() { return cDirectorySTRINGTerminalRuleCall_4_2_2_0; }

		//printOutput?="printOutput"?
		public Assignment getPrintOutputAssignment_4_3() { return cPrintOutputAssignment_4_3; }

		//"printOutput"
		public Keyword getPrintOutputPrintOutputKeyword_4_3_0() { return cPrintOutputPrintOutputKeyword_4_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	
	
	public class FitnessDimensionTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.momot.lang.MOMoT.FitnessDimensionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMINIMIZEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMINIMIZEMinimizeKeyword_0_0 = (Keyword)cMINIMIZEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMAXIMIZEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMAXIMIZEMaximizeKeyword_1_0 = (Keyword)cMAXIMIZEEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum FitnessDimensionType:
		//	MINIMIZE="minimize" | MAXIMIZE="maximize";
		public EnumRule getRule() { return rule; }

		//MINIMIZE="minimize" | MAXIMIZE="maximize"
		public Alternatives getAlternatives() { return cAlternatives; }

		//MINIMIZE="minimize"
		public EnumLiteralDeclaration getMINIMIZEEnumLiteralDeclaration_0() { return cMINIMIZEEnumLiteralDeclaration_0; }

		//"minimize"
		public Keyword getMINIMIZEMinimizeKeyword_0_0() { return cMINIMIZEMinimizeKeyword_0_0; }

		//MAXIMIZE="maximize"
		public EnumLiteralDeclaration getMAXIMIZEEnumLiteralDeclaration_1() { return cMAXIMIZEEnumLiteralDeclaration_1; }

		//"maximize"
		public Keyword getMAXIMIZEMaximizeKeyword_1_0() { return cMAXIMIZEMaximizeKeyword_1_0; }
	}
	
	private final MOMoTSearchElements pMOMoTSearch;
	private final OpKeyAssignElements pOpKeyAssign;
	private final VariableDeclarationElements pVariableDeclaration;
	private final ArrayLiteralElements pArrayLiteral;
	private final ModuleOrchestrationElements pModuleOrchestration;
	private final ParmeterValueSpecificationElements pParmeterValueSpecification;
	private final SearchOrchestrationElements pSearchOrchestration;
	private final InputModelElements pInputModel;
	private final EqualityHelperElements pEqualityHelper;
	private final AlgorithmListElements pAlgorithmList;
	private final FitnessFunctionSpecificationElements pFitnessFunctionSpecification;
	private final FitnessDimensionSpecificationElements pFitnessDimensionSpecification;
	private final FitnessDimensionTypeElements eFitnessDimensionType;
	private final FitnessDimensionConstructorElements pFitnessDimensionConstructor;
	private final FitnessDimensionXBaseElements pFitnessDimensionXBase;
	private final FitnessDimensionOCLElements pFitnessDimensionOCL;
	private final DefExpressionElements pDefExpression;
	private final AlgorithmSpecificationElements pAlgorithmSpecification;
	private final ExperimentOrchestrationElements pExperimentOrchestration;
	private final CollectorArrayElements pCollectorArray;
	private final AnalysisOrchestrationElements pAnalysisOrchestration;
	private final AnalysisGroupListElements pAnalysisGroupList;
	private final IndicatorArrayElements pIndicatorArray;
	private final ShowArrayElements pShowArray;
	private final AnalysisGroupSpecificationElements pAnalysisGroupSpecification;
	private final AlgorithmReferencesElements pAlgorithmReferences;
	private final AnalysisCommandElements pAnalysisCommand;
	private final PrintAnalysisCommandElements pPrintAnalysisCommand;
	private final SaveAnalysisCommandElements pSaveAnalysisCommand;
	private final BoxplotCommandElements pBoxplotCommand;
	private final ResultManagementElements pResultManagement;
	private final ResultManagementCommandElements pResultManagementCommand;
	private final ObjectivesCommandElements pObjectivesCommand;
	private final SolutionsCommandElements pSolutionsCommand;
	private final ModelsCommandElements pModelsCommand;
	
	private final Grammar grammar;

	private final XbaseGrammarAccess gaXbase;

	private final XtypeGrammarAccess gaXtype;

	@Inject
	public MOMoTGrammarAccess(GrammarProvider grammarProvider,
		XbaseGrammarAccess gaXbase,
		XtypeGrammarAccess gaXtype) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaXbase = gaXbase;
		this.gaXtype = gaXtype;
		this.pMOMoTSearch = new MOMoTSearchElements();
		this.pOpKeyAssign = new OpKeyAssignElements();
		this.pVariableDeclaration = new VariableDeclarationElements();
		this.pArrayLiteral = new ArrayLiteralElements();
		this.pModuleOrchestration = new ModuleOrchestrationElements();
		this.pParmeterValueSpecification = new ParmeterValueSpecificationElements();
		this.pSearchOrchestration = new SearchOrchestrationElements();
		this.pInputModel = new InputModelElements();
		this.pEqualityHelper = new EqualityHelperElements();
		this.pAlgorithmList = new AlgorithmListElements();
		this.pFitnessFunctionSpecification = new FitnessFunctionSpecificationElements();
		this.pFitnessDimensionSpecification = new FitnessDimensionSpecificationElements();
		this.eFitnessDimensionType = new FitnessDimensionTypeElements();
		this.pFitnessDimensionConstructor = new FitnessDimensionConstructorElements();
		this.pFitnessDimensionXBase = new FitnessDimensionXBaseElements();
		this.pFitnessDimensionOCL = new FitnessDimensionOCLElements();
		this.pDefExpression = new DefExpressionElements();
		this.pAlgorithmSpecification = new AlgorithmSpecificationElements();
		this.pExperimentOrchestration = new ExperimentOrchestrationElements();
		this.pCollectorArray = new CollectorArrayElements();
		this.pAnalysisOrchestration = new AnalysisOrchestrationElements();
		this.pAnalysisGroupList = new AnalysisGroupListElements();
		this.pIndicatorArray = new IndicatorArrayElements();
		this.pShowArray = new ShowArrayElements();
		this.pAnalysisGroupSpecification = new AnalysisGroupSpecificationElements();
		this.pAlgorithmReferences = new AlgorithmReferencesElements();
		this.pAnalysisCommand = new AnalysisCommandElements();
		this.pPrintAnalysisCommand = new PrintAnalysisCommandElements();
		this.pSaveAnalysisCommand = new SaveAnalysisCommandElements();
		this.pBoxplotCommand = new BoxplotCommandElements();
		this.pResultManagement = new ResultManagementElements();
		this.pResultManagementCommand = new ResultManagementCommandElements();
		this.pObjectivesCommand = new ObjectivesCommandElements();
		this.pSolutionsCommand = new SolutionsCommandElements();
		this.pModelsCommand = new ModelsCommandElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("at.ac.tuwien.big.momot.lang.MOMoT".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public XbaseGrammarAccess getXbaseGrammarAccess() {
		return gaXbase;
	}

	public XtypeGrammarAccess getXtypeGrammarAccess() {
		return gaXtype;
	}

	
	//MOMoTSearch:
	//	("package" package=QualifiedName)?
	//	importSection=XImportSection?
	//	variables+=VariableDeclaration* ("initialization" OpSingleAssign initialization=XBlockExpression)?
	//	"search" name=ValidID? OpSingleAssign searchOrchestration=SearchOrchestration
	//	"experiment" OpSingleAssign experimentOrchestration=ExperimentOrchestration ("analysis" OpSingleAssign
	//	analysisOrchestration=AnalysisOrchestration)? ("results" OpSingleAssign resultManagement=ResultManagement)?
	//	("finalization" OpSingleAssign finalization=XBlockExpression)?;
	public MOMoTSearchElements getMOMoTSearchAccess() {
		return pMOMoTSearch;
	}
	
	public ParserRule getMOMoTSearchRule() {
		return getMOMoTSearchAccess().getRule();
	}

	//OpKeyAssign:
	//	":";
	public OpKeyAssignElements getOpKeyAssignAccess() {
		return pOpKeyAssign;
	}
	
	public ParserRule getOpKeyAssignRule() {
		return getOpKeyAssignAccess().getRule();
	}

	//VariableDeclaration:
	//	"var" type=JvmTypeReference? name=ValidID (OpSingleAssign init=XExpression)?;
	public VariableDeclarationElements getVariableDeclarationAccess() {
		return pVariableDeclaration;
	}
	
	public ParserRule getVariableDeclarationRule() {
		return getVariableDeclarationAccess().getRule();
	}

	//ArrayLiteral xbase::XListLiteral:
	//	{xbase::XListLiteral}
	//	'[' elements+=XExpression (',' elements+=XExpression)* ']';
	public ArrayLiteralElements getArrayLiteralAccess() {
		return pArrayLiteral;
	}
	
	public ParserRule getArrayLiteralRule() {
		return getArrayLiteralAccess().getRule();
	}

	//ModuleOrchestration:
	//	"{"
	//	"modules" OpSingleAssign modules=ArrayLiteral ("ignoreUnits" OpSingleAssign unitsToRemove=ArrayLiteral)?
	//	("ignoreParameters" OpSingleAssign nonSolutionParameters=ArrayLiteral)? ("parameterValues" OpSingleAssign "{"
	//	parameterValues+=ParmeterValueSpecification*
	//	"}")?
	//	"}";
	public ModuleOrchestrationElements getModuleOrchestrationAccess() {
		return pModuleOrchestration;
	}
	
	public ParserRule getModuleOrchestrationRule() {
		return getModuleOrchestrationAccess().getRule();
	}

	//ParmeterValueSpecification:
	//	{ParmeterValueSpecification} name=XExpression OpKeyAssign call=XConstructorCall;
	public ParmeterValueSpecificationElements getParmeterValueSpecificationAccess() {
		return pParmeterValueSpecification;
	}
	
	public ParserRule getParmeterValueSpecificationRule() {
		return getParmeterValueSpecificationAccess().getRule();
	}

	//SearchOrchestration:
	//	{SearchOrchestration}
	//	"{"
	//	"model" OpSingleAssign model=InputModel
	//	"solutionLength" OpSingleAssign solutionLength=XExpression ("emptyInitialization" OpSingleAssign
	//	(emptyInitialization?="true" | "false"))?
	//	"transformations" OpSingleAssign moduleOrchestration=ModuleOrchestration
	//	"fitness" OpSingleAssign fitnessFunction=FitnessFunctionSpecification
	//	"algorithms" OpSingleAssign algorithms=AlgorithmList ("equalityHelper" OpSingleAssign equalityHelper=EqualityHelper)?
	//	"}";
	public SearchOrchestrationElements getSearchOrchestrationAccess() {
		return pSearchOrchestration;
	}
	
	public ParserRule getSearchOrchestrationRule() {
		return getSearchOrchestrationAccess().getRule();
	}

	//InputModel:
	//	"{"
	//	"file" OpSingleAssign path=XExpression ("adapt" OpSingleAssign adaptation=XBlockExpression)?
	//	"}";
	public InputModelElements getInputModelAccess() {
		return pInputModel;
	}
	
	public ParserRule getInputModelRule() {
		return getInputModelAccess().getRule();
	}

	//EqualityHelper:
	//	call=XConstructorCall | method=XBlockExpression;
	public EqualityHelperElements getEqualityHelperAccess() {
		return pEqualityHelper;
	}
	
	public ParserRule getEqualityHelperRule() {
		return getEqualityHelperAccess().getRule();
	}

	//AlgorithmList:
	//	"{" specifications+=AlgorithmSpecification+ "}";
	public AlgorithmListElements getAlgorithmListAccess() {
		return pAlgorithmList;
	}
	
	public ParserRule getAlgorithmListRule() {
		return getAlgorithmListAccess().getRule();
	}

	//FitnessFunctionSpecification:
	//	constructor=XConstructorCall? "{" ("preprocess" OpSingleAssign preprocess=XBlockExpression)?
	//	"objectives" OpSingleAssign "{"
	//	objectives+=FitnessDimensionSpecification+
	//	"}" ("constraints" OpSingleAssign "{"
	//	constraints+=FitnessDimensionSpecification+
	//	"}")? ("postprocess" OpSingleAssign postprocess=XBlockExpression)? ("solutionRepairer" OpSingleAssign
	//	solutionRepairer=XConstructorCall)?
	//	"}";
	public FitnessFunctionSpecificationElements getFitnessFunctionSpecificationAccess() {
		return pFitnessFunctionSpecification;
	}
	
	public ParserRule getFitnessFunctionSpecificationRule() {
		return getFitnessFunctionSpecificationAccess().getRule();
	}

	//FitnessDimensionSpecification:
	//	FitnessDimensionConstructor | FitnessDimensionXBase | FitnessDimensionOCL;
	public FitnessDimensionSpecificationElements getFitnessDimensionSpecificationAccess() {
		return pFitnessDimensionSpecification;
	}
	
	public ParserRule getFitnessDimensionSpecificationRule() {
		return getFitnessDimensionSpecificationAccess().getRule();
	}

	//enum FitnessDimensionType:
	//	MINIMIZE="minimize" | MAXIMIZE="maximize";
	public FitnessDimensionTypeElements getFitnessDimensionTypeAccess() {
		return eFitnessDimensionType;
	}
	
	public EnumRule getFitnessDimensionTypeRule() {
		return getFitnessDimensionTypeAccess().getRule();
	}

	//FitnessDimensionConstructor:
	//	name=ValidID OpKeyAssign type=FitnessDimensionType call=XConstructorCall;
	public FitnessDimensionConstructorElements getFitnessDimensionConstructorAccess() {
		return pFitnessDimensionConstructor;
	}
	
	public ParserRule getFitnessDimensionConstructorRule() {
		return getFitnessDimensionConstructorAccess().getRule();
	}

	//FitnessDimensionXBase:
	//	name=ValidID OpKeyAssign type=FitnessDimensionType value=XBlockExpression;
	public FitnessDimensionXBaseElements getFitnessDimensionXBaseAccess() {
		return pFitnessDimensionXBase;
	}
	
	public ParserRule getFitnessDimensionXBaseRule() {
		return getFitnessDimensionXBaseAccess().getRule();
	}

	//FitnessDimensionOCL:
	//	name=ValidID OpKeyAssign type=FitnessDimensionType query=XStringLiteral ("{" defExpressions+=DefExpression* "}")?;
	public FitnessDimensionOCLElements getFitnessDimensionOCLAccess() {
		return pFitnessDimensionOCL;
	}
	
	public ParserRule getFitnessDimensionOCLRule() {
		return getFitnessDimensionOCLAccess().getRule();
	}

	//DefExpression:
	//	"def" expression=STRING;
	public DefExpressionElements getDefExpressionAccess() {
		return pDefExpression;
	}
	
	public ParserRule getDefExpressionRule() {
		return getDefExpressionAccess().getRule();
	}

	//AlgorithmSpecification:
	//	name=ValidID OpKeyAssign call=XExpression;
	public AlgorithmSpecificationElements getAlgorithmSpecificationAccess() {
		return pAlgorithmSpecification;
	}
	
	public ParserRule getAlgorithmSpecificationRule() {
		return getAlgorithmSpecificationAccess().getRule();
	}

	//ExperimentOrchestration:
	//	{ExperimentOrchestration}
	//	"{"
	//	"populationSize" OpSingleAssign populationSize=XExpression
	//	"maxEvaluations" OpSingleAssign maxEvaluations=XExpression ("maxSeconds" OpSingleAssign maxSeconds=XExpression)?
	//	"nrRuns" OpSingleAssign nrRuns=XNumberLiteral ("referenceSet" OpSingleAssign referenceSet=XExpression)?
	//	("progressListeners" OpSingleAssign "[" (progressListeners+=XConstructorCall (","
	//	progressListeners+=XConstructorCall)*)? "]")? ("collectors" OpSingleAssign "[" (collectors=CollectorArray
	//	customCollectors+=XConstructorCall ("," customCollectors+=XConstructorCall)*)? "]")?
	//	"}";
	public ExperimentOrchestrationElements getExperimentOrchestrationAccess() {
		return pExperimentOrchestration;
	}
	
	public ParserRule getExperimentOrchestrationRule() {
		return getExperimentOrchestrationAccess().getRule();
	}

	//CollectorArray:
	//	{CollectorArray} (hypervolume?="hypervolume"? & generationalDistance?="generationalDistance"? &
	//	invertedGenerationalDistance?="invertedGenerationalDistance"? & spacing?="spacing"? &
	//	additiveEpsilonIndicator?="additiveEpsilonIndicator"? & contribution?="contribution"? & r1?="R1"? & r2?="R2"? &
	//	r3?="R3"? & adaptiveMultimethodVariation?="adaptiveMultimethodVariation"? &
	//	adaptiveTimeContinuation?="adaptiveTimeContinuation"? & approximationSet?="approximationSet"? &
	//	epsilonProgress?="epsilonProgress"? & elapsedTime?="elapsedTime"? & populationSize?="populationSize"?);
	public CollectorArrayElements getCollectorArrayAccess() {
		return pCollectorArray;
	}
	
	public ParserRule getCollectorArrayRule() {
		return getCollectorArrayAccess().getRule();
	}

	//AnalysisOrchestration:
	//	"{"
	//	"indicators" OpSingleAssign indicators=IndicatorArray &
	//	"significance" OpSingleAssign significance=XNumberLiteral &
	//	"show" OpSingleAssign show=ShowArray & ("grouping" OpSingleAssign grouping=AnalysisGroupList)? &
	//	saveCommand=SaveAnalysisCommand? & boxplotCommand=BoxplotCommand? & printCommand=PrintAnalysisCommand?
	//	"}";
	public AnalysisOrchestrationElements getAnalysisOrchestrationAccess() {
		return pAnalysisOrchestration;
	}
	
	public ParserRule getAnalysisOrchestrationRule() {
		return getAnalysisOrchestrationAccess().getRule();
	}

	//AnalysisGroupList:
	//	"{" group+=AnalysisGroupSpecification+ "}";
	public AnalysisGroupListElements getAnalysisGroupListAccess() {
		return pAnalysisGroupList;
	}
	
	public ParserRule getAnalysisGroupListRule() {
		return getAnalysisGroupListAccess().getRule();
	}

	//IndicatorArray:
	//	{IndicatorArray}
	//	"[" (hypervolume?="hypervolume"? & generationalDistance?="generationalDistance"? &
	//	invertedGenerationalDistance?="invertedGenerationalDistance"? & spacing?="spacing"? &
	//	additiveEpsilonIndicator?="additiveEpsilonIndicator"? & contribution?="contribution"? & r1?="R1"? & r2?="R2"? &
	//	r3?="R3"? & maximumParetoFrontError?="maximumParetoFrontError"?)
	//	"]";
	public IndicatorArrayElements getIndicatorArrayAccess() {
		return pIndicatorArray;
	}
	
	public ParserRule getIndicatorArrayRule() {
		return getIndicatorArrayAccess().getRule();
	}

	//ShowArray:
	//	{ShowArray}
	//	"[" (individual?="individualValues"? & aggregate?="aggregateValues"? &
	//	statisticalSignificance?="statisticalSignificance"?)
	//	"]";
	public ShowArrayElements getShowArrayAccess() {
		return pShowArray;
	}
	
	public ParserRule getShowArrayRule() {
		return getShowArrayAccess().getRule();
	}

	//AnalysisGroupSpecification:
	//	{AnalysisGroupSpecification} name=ValidID OpKeyAssign algorithms=AlgorithmReferences;
	public AnalysisGroupSpecificationElements getAnalysisGroupSpecificationAccess() {
		return pAnalysisGroupSpecification;
	}
	
	public ParserRule getAnalysisGroupSpecificationRule() {
		return getAnalysisGroupSpecificationAccess().getRule();
	}

	//AlgorithmReferences:
	//	{AlgorithmReferences}
	//	"[" (elements+=[AlgorithmSpecification] (',' elements+=[AlgorithmSpecification])*)? "]";
	public AlgorithmReferencesElements getAlgorithmReferencesAccess() {
		return pAlgorithmReferences;
	}
	
	public ParserRule getAlgorithmReferencesRule() {
		return getAlgorithmReferencesAccess().getRule();
	}

	//AnalysisCommand:
	//	PrintAnalysisCommand | SaveAnalysisCommand | BoxplotCommand;
	public AnalysisCommandElements getAnalysisCommandAccess() {
		return pAnalysisCommand;
	}
	
	public ParserRule getAnalysisCommandRule() {
		return getAnalysisCommandAccess().getRule();
	}

	//PrintAnalysisCommand:
	//	{PrintAnalysisCommand}
	//	"printOutput";
	public PrintAnalysisCommandElements getPrintAnalysisCommandAccess() {
		return pPrintAnalysisCommand;
	}
	
	public ParserRule getPrintAnalysisCommandRule() {
		return getPrintAnalysisCommandAccess().getRule();
	}

	//SaveAnalysisCommand:
	//	"outputFile" OpSingleAssign file=XStringLiteral;
	public SaveAnalysisCommandElements getSaveAnalysisCommandAccess() {
		return pSaveAnalysisCommand;
	}
	
	public ParserRule getSaveAnalysisCommandRule() {
		return getSaveAnalysisCommandAccess().getRule();
	}

	//BoxplotCommand:
	//	"boxplotDirectory" OpSingleAssign directory=XStringLiteral;
	public BoxplotCommandElements getBoxplotCommandAccess() {
		return pBoxplotCommand;
	}
	
	public ParserRule getBoxplotCommandRule() {
		return getBoxplotCommandAccess().getRule();
	}

	//ResultManagement:
	//	{ResultManagement}
	//	"{" ("adaptModels" OpSingleAssign adaptModels=XBlockExpression)?
	//	commands+=ResultManagementCommand+
	//	"}";
	public ResultManagementElements getResultManagementAccess() {
		return pResultManagement;
	}
	
	public ParserRule getResultManagementRule() {
		return getResultManagementAccess().getRule();
	}

	//ResultManagementCommand:
	//	ObjectivesCommand | SolutionsCommand | ModelsCommand;
	public ResultManagementCommandElements getResultManagementCommandAccess() {
		return pResultManagementCommand;
	}
	
	public ParserRule getResultManagementCommandRule() {
		return getResultManagementCommandAccess().getRule();
	}

	//ObjectivesCommand:
	//	{ObjectivesCommand}
	//	"objectives" OpSingleAssign "{" (("algorithms" OpSingleAssign algorithms=AlgorithmReferences)? & ("neighborhoodSize"
	//	OpSingleAssign & (neighborhoodSize=INT | maxNeighborhoodSize?="maxNeighborhoodSize"))? & ("outputFile" OpSingleAssign
	//	file=STRING)? & printOutput?="printOutput"?)
	//	"}";
	public ObjectivesCommandElements getObjectivesCommandAccess() {
		return pObjectivesCommand;
	}
	
	public ParserRule getObjectivesCommandRule() {
		return getObjectivesCommandAccess().getRule();
	}

	//SolutionsCommand:
	//	{SolutionsCommand}
	//	"solutions" OpSingleAssign "{" (("algorithms" OpSingleAssign algorithms=AlgorithmReferences)? & ("neighborhoodSize"
	//	OpSingleAssign & (neighborhoodSize=INT | maxNeighborhoodSize?="maxNeighborhoodSize"))? & ("outputFile" OpSingleAssign
	//	file=STRING)? & ("outputDirectory" OpSingleAssign directory=STRING)? & printOutput?="printOutput"?)
	//	"}";
	public SolutionsCommandElements getSolutionsCommandAccess() {
		return pSolutionsCommand;
	}
	
	public ParserRule getSolutionsCommandRule() {
		return getSolutionsCommandAccess().getRule();
	}

	//ModelsCommand:
	//	{ModelsCommand}
	//	"models" OpSingleAssign "{" (("algorithms" OpSingleAssign algorithms=AlgorithmReferences)? & ("neighborhoodSize"
	//	OpSingleAssign & (neighborhoodSize=INT | maxNeighborhoodSize?="maxNeighborhoodSize"))? & ("outputDirectory"
	//	OpSingleAssign directory=STRING)? & printOutput?="printOutput"?)
	//	"}";
	public ModelsCommandElements getModelsCommandAccess() {
		return pModelsCommand;
	}
	
	public ParserRule getModelsCommandRule() {
		return getModelsCommandAccess().getRule();
	}

	//XExpression:
	//	XAssignment;
	public XbaseGrammarAccess.XExpressionElements getXExpressionAccess() {
		return gaXbase.getXExpressionAccess();
	}
	
	public ParserRule getXExpressionRule() {
		return getXExpressionAccess().getRule();
	}

	//XAssignment XExpression:
	//	{XAssignment} feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign value=XAssignment | XOrExpression
	//	(=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpMultiAssign])
	//	rightOperand=XAssignment)?;
	public XbaseGrammarAccess.XAssignmentElements getXAssignmentAccess() {
		return gaXbase.getXAssignmentAccess();
	}
	
	public ParserRule getXAssignmentRule() {
		return getXAssignmentAccess().getRule();
	}

	//OpSingleAssign:
	//	'=';
	public XbaseGrammarAccess.OpSingleAssignElements getOpSingleAssignAccess() {
		return gaXbase.getOpSingleAssignAccess();
	}
	
	public ParserRule getOpSingleAssignRule() {
		return getOpSingleAssignAccess().getRule();
	}

	//OpMultiAssign:
	//	'+=' | '-=' | '*=' | '/=' | '%=' | '<' '<' '=' | '>' '>'? '>=';
	public XbaseGrammarAccess.OpMultiAssignElements getOpMultiAssignAccess() {
		return gaXbase.getOpMultiAssignAccess();
	}
	
	public ParserRule getOpMultiAssignRule() {
		return getOpMultiAssignAccess().getRule();
	}

	//XOrExpression XExpression:
	//	XAndExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOr])
	//	rightOperand=XAndExpression)*;
	public XbaseGrammarAccess.XOrExpressionElements getXOrExpressionAccess() {
		return gaXbase.getXOrExpressionAccess();
	}
	
	public ParserRule getXOrExpressionRule() {
		return getXOrExpressionAccess().getRule();
	}

	//OpOr:
	//	'||';
	public XbaseGrammarAccess.OpOrElements getOpOrAccess() {
		return gaXbase.getOpOrAccess();
	}
	
	public ParserRule getOpOrRule() {
		return getOpOrAccess().getRule();
	}

	//XAndExpression XExpression:
	//	XEqualityExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAnd])
	//	rightOperand=XEqualityExpression)*;
	public XbaseGrammarAccess.XAndExpressionElements getXAndExpressionAccess() {
		return gaXbase.getXAndExpressionAccess();
	}
	
	public ParserRule getXAndExpressionRule() {
		return getXAndExpressionAccess().getRule();
	}

	//OpAnd:
	//	'&&';
	public XbaseGrammarAccess.OpAndElements getOpAndAccess() {
		return gaXbase.getOpAndAccess();
	}
	
	public ParserRule getOpAndRule() {
		return getOpAndAccess().getRule();
	}

	//XEqualityExpression XExpression:
	//	XRelationalExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpEquality])
	//	rightOperand=XRelationalExpression)*;
	public XbaseGrammarAccess.XEqualityExpressionElements getXEqualityExpressionAccess() {
		return gaXbase.getXEqualityExpressionAccess();
	}
	
	public ParserRule getXEqualityExpressionRule() {
		return getXEqualityExpressionAccess().getRule();
	}

	//OpEquality:
	//	'==' | '!=' | '===' | '!==';
	public XbaseGrammarAccess.OpEqualityElements getOpEqualityAccess() {
		return gaXbase.getOpEqualityAccess();
	}
	
	public ParserRule getOpEqualityRule() {
		return getOpEqualityAccess().getRule();
	}

	//XRelationalExpression XExpression:
	//	XOtherOperatorExpression (=> ({XInstanceOfExpression.expression=current} 'instanceof') type=JvmTypeReference | =>
	//	({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpCompare])
	//	rightOperand=XOtherOperatorExpression)*;
	public XbaseGrammarAccess.XRelationalExpressionElements getXRelationalExpressionAccess() {
		return gaXbase.getXRelationalExpressionAccess();
	}
	
	public ParserRule getXRelationalExpressionRule() {
		return getXRelationalExpressionAccess().getRule();
	}

	//OpCompare:
	//	'>=' | '<' '=' | '>' | '<';
	public XbaseGrammarAccess.OpCompareElements getOpCompareAccess() {
		return gaXbase.getOpCompareAccess();
	}
	
	public ParserRule getOpCompareRule() {
		return getOpCompareAccess().getRule();
	}

	//XOtherOperatorExpression XExpression:
	//	XAdditiveExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOther])
	//	rightOperand=XAdditiveExpression)*;
	public XbaseGrammarAccess.XOtherOperatorExpressionElements getXOtherOperatorExpressionAccess() {
		return gaXbase.getXOtherOperatorExpressionAccess();
	}
	
	public ParserRule getXOtherOperatorExpressionRule() {
		return getXOtherOperatorExpressionAccess().getRule();
	}

	//OpOther:
	//	'->' | '..<' | '>' '..' | '..' | '=>' | '>' (=> ('>' '>') | '>') | '<' (=> ('<' '<') | '<' | '=>') | '<>' | '?:';
	public XbaseGrammarAccess.OpOtherElements getOpOtherAccess() {
		return gaXbase.getOpOtherAccess();
	}
	
	public ParserRule getOpOtherRule() {
		return getOpOtherAccess().getRule();
	}

	//XAdditiveExpression XExpression:
	//	XMultiplicativeExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAdd])
	//	rightOperand=XMultiplicativeExpression)*;
	public XbaseGrammarAccess.XAdditiveExpressionElements getXAdditiveExpressionAccess() {
		return gaXbase.getXAdditiveExpressionAccess();
	}
	
	public ParserRule getXAdditiveExpressionRule() {
		return getXAdditiveExpressionAccess().getRule();
	}

	//OpAdd:
	//	'+' | '-';
	public XbaseGrammarAccess.OpAddElements getOpAddAccess() {
		return gaXbase.getOpAddAccess();
	}
	
	public ParserRule getOpAddRule() {
		return getOpAddAccess().getRule();
	}

	//XMultiplicativeExpression XExpression:
	//	XUnaryOperation (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpMulti])
	//	rightOperand=XUnaryOperation)*;
	public XbaseGrammarAccess.XMultiplicativeExpressionElements getXMultiplicativeExpressionAccess() {
		return gaXbase.getXMultiplicativeExpressionAccess();
	}
	
	public ParserRule getXMultiplicativeExpressionRule() {
		return getXMultiplicativeExpressionAccess().getRule();
	}

	//OpMulti:
	//	'*' | '**' | '/' | '%';
	public XbaseGrammarAccess.OpMultiElements getOpMultiAccess() {
		return gaXbase.getOpMultiAccess();
	}
	
	public ParserRule getOpMultiRule() {
		return getOpMultiAccess().getRule();
	}

	//XUnaryOperation XExpression:
	//	{XUnaryOperation} feature=[types::JvmIdentifiableElement|OpUnary] operand=XUnaryOperation | XCastedExpression;
	public XbaseGrammarAccess.XUnaryOperationElements getXUnaryOperationAccess() {
		return gaXbase.getXUnaryOperationAccess();
	}
	
	public ParserRule getXUnaryOperationRule() {
		return getXUnaryOperationAccess().getRule();
	}

	//OpUnary:
	//	"!" | "-" | "+";
	public XbaseGrammarAccess.OpUnaryElements getOpUnaryAccess() {
		return gaXbase.getOpUnaryAccess();
	}
	
	public ParserRule getOpUnaryRule() {
		return getOpUnaryAccess().getRule();
	}

	//XCastedExpression XExpression:
	//	XPostfixOperation (=> ({XCastedExpression.target=current} 'as') type=JvmTypeReference)*;
	public XbaseGrammarAccess.XCastedExpressionElements getXCastedExpressionAccess() {
		return gaXbase.getXCastedExpressionAccess();
	}
	
	public ParserRule getXCastedExpressionRule() {
		return getXCastedExpressionAccess().getRule();
	}

	//XPostfixOperation XExpression:
	//	XMemberFeatureCall => ({XPostfixOperation.operand=current} feature=[types::JvmIdentifiableElement|OpPostfix])?;
	public XbaseGrammarAccess.XPostfixOperationElements getXPostfixOperationAccess() {
		return gaXbase.getXPostfixOperationAccess();
	}
	
	public ParserRule getXPostfixOperationRule() {
		return getXPostfixOperationAccess().getRule();
	}

	//OpPostfix:
	//	"++" | "--";
	public XbaseGrammarAccess.OpPostfixElements getOpPostfixAccess() {
		return gaXbase.getOpPostfixAccess();
	}
	
	public ParserRule getOpPostfixRule() {
		return getOpPostfixAccess().getRule();
	}

	//XMemberFeatureCall XExpression:
	//	XPrimaryExpression (=> ({XAssignment.assignable=current} ('.' | explicitStatic?="::")
	//	feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign) value=XAssignment | =>
	//	({XMemberFeatureCall.memberCallTarget=current} ("." | nullSafe?="?." | explicitStatic?="::")) ('<'
	//	typeArguments+=JvmArgumentTypeReference (',' typeArguments+=JvmArgumentTypeReference)* '>')?
	//	feature=[types::JvmIdentifiableElement|IdOrSuper] (=> explicitOperationCall?='(' (memberCallArguments+=XShortClosure
	//	| memberCallArguments+=XExpression (',' memberCallArguments+=XExpression)*)? ')')? memberCallArguments+=XClosure?)*;
	public XbaseGrammarAccess.XMemberFeatureCallElements getXMemberFeatureCallAccess() {
		return gaXbase.getXMemberFeatureCallAccess();
	}
	
	public ParserRule getXMemberFeatureCallRule() {
		return getXMemberFeatureCallAccess().getRule();
	}

	//XPrimaryExpression XExpression:
	//	XConstructorCall | XBlockExpression | XSwitchExpression | XSynchronizedExpression | XFeatureCall | XLiteral |
	//	XIfExpression | XForLoopExpression | XBasicForLoopExpression | XWhileExpression | XDoWhileExpression |
	//	XThrowExpression | XReturnExpression | XTryCatchFinallyExpression | XParenthesizedExpression;
	public XbaseGrammarAccess.XPrimaryExpressionElements getXPrimaryExpressionAccess() {
		return gaXbase.getXPrimaryExpressionAccess();
	}
	
	public ParserRule getXPrimaryExpressionRule() {
		return getXPrimaryExpressionAccess().getRule();
	}

	//XLiteral XExpression:
	//	XCollectionLiteral | XClosure | XBooleanLiteral | XNumberLiteral | XNullLiteral | XStringLiteral | XTypeLiteral;
	public XbaseGrammarAccess.XLiteralElements getXLiteralAccess() {
		return gaXbase.getXLiteralAccess();
	}
	
	public ParserRule getXLiteralRule() {
		return getXLiteralAccess().getRule();
	}

	//XCollectionLiteral:
	//	XSetLiteral | XListLiteral;
	public XbaseGrammarAccess.XCollectionLiteralElements getXCollectionLiteralAccess() {
		return gaXbase.getXCollectionLiteralAccess();
	}
	
	public ParserRule getXCollectionLiteralRule() {
		return getXCollectionLiteralAccess().getRule();
	}

	//XSetLiteral:
	//	{XSetLiteral} '#' '{' (elements+=XExpression (',' elements+=XExpression)*)? '}';
	public XbaseGrammarAccess.XSetLiteralElements getXSetLiteralAccess() {
		return gaXbase.getXSetLiteralAccess();
	}
	
	public ParserRule getXSetLiteralRule() {
		return getXSetLiteralAccess().getRule();
	}

	//XListLiteral:
	//	{XListLiteral} '#' '[' (elements+=XExpression (',' elements+=XExpression)*)? ']';
	public XbaseGrammarAccess.XListLiteralElements getXListLiteralAccess() {
		return gaXbase.getXListLiteralAccess();
	}
	
	public ParserRule getXListLiteralRule() {
		return getXListLiteralAccess().getRule();
	}

	//XClosure XExpression:
	//	=> ({XClosure} '[') => ((declaredFormalParameters+=JvmFormalParameter (','
	//	declaredFormalParameters+=JvmFormalParameter)*)? explicitSyntax?='|')? expression=XExpressionInClosure ']';
	public XbaseGrammarAccess.XClosureElements getXClosureAccess() {
		return gaXbase.getXClosureAccess();
	}
	
	public ParserRule getXClosureRule() {
		return getXClosureAccess().getRule();
	}

	//XExpressionInClosure XExpression:
	//	{XBlockExpression} (expressions+=XExpressionOrVarDeclaration ';'?)*;
	public XbaseGrammarAccess.XExpressionInClosureElements getXExpressionInClosureAccess() {
		return gaXbase.getXExpressionInClosureAccess();
	}
	
	public ParserRule getXExpressionInClosureRule() {
		return getXExpressionInClosureAccess().getRule();
	}

	//XShortClosure XExpression:
	//	=> ({XClosure} (declaredFormalParameters+=JvmFormalParameter (',' declaredFormalParameters+=JvmFormalParameter)*)?
	//	explicitSyntax?='|') expression=XExpression;
	public XbaseGrammarAccess.XShortClosureElements getXShortClosureAccess() {
		return gaXbase.getXShortClosureAccess();
	}
	
	public ParserRule getXShortClosureRule() {
		return getXShortClosureAccess().getRule();
	}

	//XParenthesizedExpression XExpression:
	//	'(' XExpression ')';
	public XbaseGrammarAccess.XParenthesizedExpressionElements getXParenthesizedExpressionAccess() {
		return gaXbase.getXParenthesizedExpressionAccess();
	}
	
	public ParserRule getXParenthesizedExpressionRule() {
		return getXParenthesizedExpressionAccess().getRule();
	}

	//XIfExpression XExpression:
	//	{XIfExpression} 'if' '(' if=XExpression ')' then=XExpression (=> 'else' else=XExpression)?;
	public XbaseGrammarAccess.XIfExpressionElements getXIfExpressionAccess() {
		return gaXbase.getXIfExpressionAccess();
	}
	
	public ParserRule getXIfExpressionRule() {
		return getXIfExpressionAccess().getRule();
	}

	//XSwitchExpression XExpression:
	//	{XSwitchExpression} 'switch' (=> ('(' declaredParam=JvmFormalParameter ':') switch=XExpression ')' | =>
	//	(declaredParam=JvmFormalParameter ':')? switch=XExpression) '{' cases+=XCasePart* ('default' ':'
	//	default=XExpression)? '}';
	public XbaseGrammarAccess.XSwitchExpressionElements getXSwitchExpressionAccess() {
		return gaXbase.getXSwitchExpressionAccess();
	}
	
	public ParserRule getXSwitchExpressionRule() {
		return getXSwitchExpressionAccess().getRule();
	}

	//XCasePart:
	//	{XCasePart} typeGuard=JvmTypeReference? ('case' case=XExpression)? (':' then=XExpression | fallThrough?=',');
	public XbaseGrammarAccess.XCasePartElements getXCasePartAccess() {
		return gaXbase.getXCasePartAccess();
	}
	
	public ParserRule getXCasePartRule() {
		return getXCasePartAccess().getRule();
	}

	//XForLoopExpression XExpression:
	//	=> ({XForLoopExpression} 'for' '(' declaredParam=JvmFormalParameter ':') forExpression=XExpression ')'
	//	eachExpression=XExpression;
	public XbaseGrammarAccess.XForLoopExpressionElements getXForLoopExpressionAccess() {
		return gaXbase.getXForLoopExpressionAccess();
	}
	
	public ParserRule getXForLoopExpressionRule() {
		return getXForLoopExpressionAccess().getRule();
	}

	//XBasicForLoopExpression XExpression:
	//	{XBasicForLoopExpression} 'for' '(' (initExpressions+=XExpressionOrVarDeclaration (','
	//	initExpressions+=XExpressionOrVarDeclaration)*)? ';' expression=XExpression? ';' (updateExpressions+=XExpression (','
	//	updateExpressions+=XExpression)*)? ')' eachExpression=XExpression;
	public XbaseGrammarAccess.XBasicForLoopExpressionElements getXBasicForLoopExpressionAccess() {
		return gaXbase.getXBasicForLoopExpressionAccess();
	}
	
	public ParserRule getXBasicForLoopExpressionRule() {
		return getXBasicForLoopExpressionAccess().getRule();
	}

	//XWhileExpression XExpression:
	//	{XWhileExpression} 'while' '(' predicate=XExpression ')' body=XExpression;
	public XbaseGrammarAccess.XWhileExpressionElements getXWhileExpressionAccess() {
		return gaXbase.getXWhileExpressionAccess();
	}
	
	public ParserRule getXWhileExpressionRule() {
		return getXWhileExpressionAccess().getRule();
	}

	//XDoWhileExpression XExpression:
	//	{XDoWhileExpression} 'do' body=XExpression 'while' '(' predicate=XExpression ')';
	public XbaseGrammarAccess.XDoWhileExpressionElements getXDoWhileExpressionAccess() {
		return gaXbase.getXDoWhileExpressionAccess();
	}
	
	public ParserRule getXDoWhileExpressionRule() {
		return getXDoWhileExpressionAccess().getRule();
	}

	//XBlockExpression XExpression:
	//	{XBlockExpression} '{' (expressions+=XExpressionOrVarDeclaration ';'?)* '}';
	public XbaseGrammarAccess.XBlockExpressionElements getXBlockExpressionAccess() {
		return gaXbase.getXBlockExpressionAccess();
	}
	
	public ParserRule getXBlockExpressionRule() {
		return getXBlockExpressionAccess().getRule();
	}

	//XExpressionOrVarDeclaration XExpression:
	//	XVariableDeclaration | XExpression;
	public XbaseGrammarAccess.XExpressionOrVarDeclarationElements getXExpressionOrVarDeclarationAccess() {
		return gaXbase.getXExpressionOrVarDeclarationAccess();
	}
	
	public ParserRule getXExpressionOrVarDeclarationRule() {
		return getXExpressionOrVarDeclarationAccess().getRule();
	}

	//XVariableDeclaration XExpression:
	//	{XVariableDeclaration} (writeable?='var' | 'val') (=> (type=JvmTypeReference name=ValidID) | name=ValidID) ('='
	//	right=XExpression)?;
	public XbaseGrammarAccess.XVariableDeclarationElements getXVariableDeclarationAccess() {
		return gaXbase.getXVariableDeclarationAccess();
	}
	
	public ParserRule getXVariableDeclarationRule() {
		return getXVariableDeclarationAccess().getRule();
	}

	//JvmFormalParameter types::JvmFormalParameter:
	//	parameterType=JvmTypeReference? name=ValidID;
	public XbaseGrammarAccess.JvmFormalParameterElements getJvmFormalParameterAccess() {
		return gaXbase.getJvmFormalParameterAccess();
	}
	
	public ParserRule getJvmFormalParameterRule() {
		return getJvmFormalParameterAccess().getRule();
	}

	//FullJvmFormalParameter types::JvmFormalParameter:
	//	parameterType=JvmTypeReference name=ValidID;
	public XbaseGrammarAccess.FullJvmFormalParameterElements getFullJvmFormalParameterAccess() {
		return gaXbase.getFullJvmFormalParameterAccess();
	}
	
	public ParserRule getFullJvmFormalParameterRule() {
		return getFullJvmFormalParameterAccess().getRule();
	}

	//XFeatureCall XExpression:
	//	{XFeatureCall} ('<' typeArguments+=JvmArgumentTypeReference (',' typeArguments+=JvmArgumentTypeReference)* '>')?
	//	feature=[types::JvmIdentifiableElement|IdOrSuper] (=> explicitOperationCall?='(' (featureCallArguments+=XShortClosure
	//	| featureCallArguments+=XExpression (',' featureCallArguments+=XExpression)*)? ')')? featureCallArguments+=XClosure?;
	public XbaseGrammarAccess.XFeatureCallElements getXFeatureCallAccess() {
		return gaXbase.getXFeatureCallAccess();
	}
	
	public ParserRule getXFeatureCallRule() {
		return getXFeatureCallAccess().getRule();
	}

	//FeatureCallID:
	//	ValidID | 'extends' | 'static' | 'import' | 'extension';
	public XbaseGrammarAccess.FeatureCallIDElements getFeatureCallIDAccess() {
		return gaXbase.getFeatureCallIDAccess();
	}
	
	public ParserRule getFeatureCallIDRule() {
		return getFeatureCallIDAccess().getRule();
	}

	//IdOrSuper:
	//	FeatureCallID | 'super';
	public XbaseGrammarAccess.IdOrSuperElements getIdOrSuperAccess() {
		return gaXbase.getIdOrSuperAccess();
	}
	
	public ParserRule getIdOrSuperRule() {
		return getIdOrSuperAccess().getRule();
	}

	//XConstructorCall XExpression:
	//	{XConstructorCall} 'new' constructor=[types::JvmConstructor|QualifiedName] (=> '<'
	//	typeArguments+=JvmArgumentTypeReference (',' typeArguments+=JvmArgumentTypeReference)* '>')? (=>
	//	explicitConstructorCall?='(' (arguments+=XShortClosure | arguments+=XExpression (',' arguments+=XExpression)*)? ')')?
	//	arguments+=XClosure?;
	public XbaseGrammarAccess.XConstructorCallElements getXConstructorCallAccess() {
		return gaXbase.getXConstructorCallAccess();
	}
	
	public ParserRule getXConstructorCallRule() {
		return getXConstructorCallAccess().getRule();
	}

	//XBooleanLiteral XExpression:
	//	{XBooleanLiteral} ('false' | isTrue?='true');
	public XbaseGrammarAccess.XBooleanLiteralElements getXBooleanLiteralAccess() {
		return gaXbase.getXBooleanLiteralAccess();
	}
	
	public ParserRule getXBooleanLiteralRule() {
		return getXBooleanLiteralAccess().getRule();
	}

	//XNullLiteral XExpression:
	//	{XNullLiteral} 'null';
	public XbaseGrammarAccess.XNullLiteralElements getXNullLiteralAccess() {
		return gaXbase.getXNullLiteralAccess();
	}
	
	public ParserRule getXNullLiteralRule() {
		return getXNullLiteralAccess().getRule();
	}

	//XNumberLiteral XExpression:
	//	{XNumberLiteral} value=Number;
	public XbaseGrammarAccess.XNumberLiteralElements getXNumberLiteralAccess() {
		return gaXbase.getXNumberLiteralAccess();
	}
	
	public ParserRule getXNumberLiteralRule() {
		return getXNumberLiteralAccess().getRule();
	}

	//XStringLiteral XExpression:
	//	{XStringLiteral} value=STRING;
	public XbaseGrammarAccess.XStringLiteralElements getXStringLiteralAccess() {
		return gaXbase.getXStringLiteralAccess();
	}
	
	public ParserRule getXStringLiteralRule() {
		return getXStringLiteralAccess().getRule();
	}

	//XTypeLiteral XExpression:
	//	{XTypeLiteral} 'typeof' '(' type=[types::JvmType|QualifiedName] arrayDimensions+=ArrayBrackets* ')';
	public XbaseGrammarAccess.XTypeLiteralElements getXTypeLiteralAccess() {
		return gaXbase.getXTypeLiteralAccess();
	}
	
	public ParserRule getXTypeLiteralRule() {
		return getXTypeLiteralAccess().getRule();
	}

	//XThrowExpression XExpression:
	//	{XThrowExpression} 'throw' expression=XExpression;
	public XbaseGrammarAccess.XThrowExpressionElements getXThrowExpressionAccess() {
		return gaXbase.getXThrowExpressionAccess();
	}
	
	public ParserRule getXThrowExpressionRule() {
		return getXThrowExpressionAccess().getRule();
	}

	//XReturnExpression XExpression:
	//	{XReturnExpression} 'return' -> expression=XExpression?;
	public XbaseGrammarAccess.XReturnExpressionElements getXReturnExpressionAccess() {
		return gaXbase.getXReturnExpressionAccess();
	}
	
	public ParserRule getXReturnExpressionRule() {
		return getXReturnExpressionAccess().getRule();
	}

	//XTryCatchFinallyExpression XExpression:
	//	{XTryCatchFinallyExpression} 'try' expression=XExpression (catchClauses+=XCatchClause+ (=> 'finally'
	//	finallyExpression=XExpression)? | 'finally' finallyExpression=XExpression);
	public XbaseGrammarAccess.XTryCatchFinallyExpressionElements getXTryCatchFinallyExpressionAccess() {
		return gaXbase.getXTryCatchFinallyExpressionAccess();
	}
	
	public ParserRule getXTryCatchFinallyExpressionRule() {
		return getXTryCatchFinallyExpressionAccess().getRule();
	}

	//XSynchronizedExpression XExpression:
	//	=> ({XSynchronizedExpression} 'synchronized' '(') param=XExpression ')' expression=XExpression;
	public XbaseGrammarAccess.XSynchronizedExpressionElements getXSynchronizedExpressionAccess() {
		return gaXbase.getXSynchronizedExpressionAccess();
	}
	
	public ParserRule getXSynchronizedExpressionRule() {
		return getXSynchronizedExpressionAccess().getRule();
	}

	//XCatchClause:
	//	=> 'catch' '(' declaredParam=FullJvmFormalParameter ')' expression=XExpression;
	public XbaseGrammarAccess.XCatchClauseElements getXCatchClauseAccess() {
		return gaXbase.getXCatchClauseAccess();
	}
	
	public ParserRule getXCatchClauseRule() {
		return getXCatchClauseAccess().getRule();
	}

	//QualifiedName:
	//	ValidID (=> '.' ValidID)*;
	public XbaseGrammarAccess.QualifiedNameElements getQualifiedNameAccess() {
		return gaXbase.getQualifiedNameAccess();
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//Number hidden():
	//	HEX | (INT | DECIMAL) ('.' (INT | DECIMAL))?;
	public XbaseGrammarAccess.NumberElements getNumberAccess() {
		return gaXbase.getNumberAccess();
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}

	///**
	// * Dummy rule, for "better" downwards compatibility, since GrammarAccess generates non-static inner classes, 
	// * which makes downstream grammars break on classloading, when a rule is removed.
	// */
	//StaticQualifier:
	//	(ValidID '::')+;
	public XbaseGrammarAccess.StaticQualifierElements getStaticQualifierAccess() {
		return gaXbase.getStaticQualifierAccess();
	}
	
	public ParserRule getStaticQualifierRule() {
		return getStaticQualifierAccess().getRule();
	}

	//terminal HEX:
	//	('0x' | '0X') ('0'..'9' | 'a'..'f' | 'A'..'F' | '_')+ ('#' (('b' | 'B') ('i' | 'I') | ('l' | 'L')))?;
	public TerminalRule getHEXRule() {
		return gaXbase.getHEXRule();
	} 

	//terminal INT returns ecore::EInt:
	//	'0'..'9' ('0'..'9' | '_')*;
	public TerminalRule getINTRule() {
		return gaXbase.getINTRule();
	} 

	//terminal DECIMAL:
	//	INT (('e' | 'E') ('+' | '-')? INT)? (('b' | 'B') ('i' | 'I' | 'd' | 'D') | ('l' | 'L' | 'd' | 'D' | 'f' | 'F'))?;
	public TerminalRule getDECIMALRule() {
		return gaXbase.getDECIMALRule();
	} 

	//JvmTypeReference:
	//	JvmParameterizedTypeReference => ({JvmGenericArrayTypeReference.componentType=current} ArrayBrackets)* |
	//	XFunctionTypeRef;
	public XtypeGrammarAccess.JvmTypeReferenceElements getJvmTypeReferenceAccess() {
		return gaXtype.getJvmTypeReferenceAccess();
	}
	
	public ParserRule getJvmTypeReferenceRule() {
		return getJvmTypeReferenceAccess().getRule();
	}

	//ArrayBrackets:
	//	'[' ']';
	public XtypeGrammarAccess.ArrayBracketsElements getArrayBracketsAccess() {
		return gaXtype.getArrayBracketsAccess();
	}
	
	public ParserRule getArrayBracketsRule() {
		return getArrayBracketsAccess().getRule();
	}

	//XFunctionTypeRef:
	//	('(' (paramTypes+=JvmTypeReference (',' paramTypes+=JvmTypeReference)*)? ')')? '=>' returnType=JvmTypeReference;
	public XtypeGrammarAccess.XFunctionTypeRefElements getXFunctionTypeRefAccess() {
		return gaXtype.getXFunctionTypeRefAccess();
	}
	
	public ParserRule getXFunctionTypeRefRule() {
		return getXFunctionTypeRefAccess().getRule();
	}

	//JvmParameterizedTypeReference:
	//	type=[JvmType|super::QualifiedName] (=> '<' arguments+=JvmArgumentTypeReference (','
	//	arguments+=JvmArgumentTypeReference)* '>' (=> ({JvmInnerTypeReference.outer=current} '.') type=[JvmType|ValidID] (=>
	//	'<' arguments+=JvmArgumentTypeReference (',' arguments+=JvmArgumentTypeReference)* '>')?)*)?;
	public XtypeGrammarAccess.JvmParameterizedTypeReferenceElements getJvmParameterizedTypeReferenceAccess() {
		return gaXtype.getJvmParameterizedTypeReferenceAccess();
	}
	
	public ParserRule getJvmParameterizedTypeReferenceRule() {
		return getJvmParameterizedTypeReferenceAccess().getRule();
	}

	//JvmArgumentTypeReference JvmTypeReference:
	//	JvmTypeReference | JvmWildcardTypeReference;
	public XtypeGrammarAccess.JvmArgumentTypeReferenceElements getJvmArgumentTypeReferenceAccess() {
		return gaXtype.getJvmArgumentTypeReferenceAccess();
	}
	
	public ParserRule getJvmArgumentTypeReferenceRule() {
		return getJvmArgumentTypeReferenceAccess().getRule();
	}

	//JvmWildcardTypeReference:
	//	{JvmWildcardTypeReference} '?' (constraints+=JvmUpperBound constraints+=JvmUpperBoundAnded* |
	//	constraints+=JvmLowerBound constraints+=JvmLowerBoundAnded*)?;
	public XtypeGrammarAccess.JvmWildcardTypeReferenceElements getJvmWildcardTypeReferenceAccess() {
		return gaXtype.getJvmWildcardTypeReferenceAccess();
	}
	
	public ParserRule getJvmWildcardTypeReferenceRule() {
		return getJvmWildcardTypeReferenceAccess().getRule();
	}

	//JvmUpperBound:
	//	'extends' typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundElements getJvmUpperBoundAccess() {
		return gaXtype.getJvmUpperBoundAccess();
	}
	
	public ParserRule getJvmUpperBoundRule() {
		return getJvmUpperBoundAccess().getRule();
	}

	//JvmUpperBoundAnded JvmUpperBound:
	//	'&' typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundAndedElements getJvmUpperBoundAndedAccess() {
		return gaXtype.getJvmUpperBoundAndedAccess();
	}
	
	public ParserRule getJvmUpperBoundAndedRule() {
		return getJvmUpperBoundAndedAccess().getRule();
	}

	//JvmLowerBound:
	//	'super' typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmLowerBoundElements getJvmLowerBoundAccess() {
		return gaXtype.getJvmLowerBoundAccess();
	}
	
	public ParserRule getJvmLowerBoundRule() {
		return getJvmLowerBoundAccess().getRule();
	}

	//JvmLowerBoundAnded JvmLowerBound:
	//	'&' typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmLowerBoundAndedElements getJvmLowerBoundAndedAccess() {
		return gaXtype.getJvmLowerBoundAndedAccess();
	}
	
	public ParserRule getJvmLowerBoundAndedRule() {
		return getJvmLowerBoundAndedAccess().getRule();
	}

	//JvmTypeParameter:
	//	name=ValidID (constraints+=JvmUpperBound constraints+=JvmUpperBoundAnded*)?;
	public XtypeGrammarAccess.JvmTypeParameterElements getJvmTypeParameterAccess() {
		return gaXtype.getJvmTypeParameterAccess();
	}
	
	public ParserRule getJvmTypeParameterRule() {
		return getJvmTypeParameterAccess().getRule();
	}

	//QualifiedNameWithWildcard:
	//	super::QualifiedName '.' '*';
	public XtypeGrammarAccess.QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return gaXtype.getQualifiedNameWithWildcardAccess();
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}

	//ValidID:
	//	ID;
	public XtypeGrammarAccess.ValidIDElements getValidIDAccess() {
		return gaXtype.getValidIDAccess();
	}
	
	public ParserRule getValidIDRule() {
		return getValidIDAccess().getRule();
	}

	//XImportSection:
	//	importDeclarations+=XImportDeclaration+;
	public XtypeGrammarAccess.XImportSectionElements getXImportSectionAccess() {
		return gaXtype.getXImportSectionAccess();
	}
	
	public ParserRule getXImportSectionRule() {
		return getXImportSectionAccess().getRule();
	}

	//XImportDeclaration:
	//	'import' (static?='static' extension?='extension'? importedType=[JvmDeclaredType|QualifiedNameInStaticImport]
	//	(wildcard?='*' | memberName=ValidID) | importedType=[JvmDeclaredType|super::QualifiedName] |
	//	importedNamespace=QualifiedNameWithWildcard) ';'?;
	public XtypeGrammarAccess.XImportDeclarationElements getXImportDeclarationAccess() {
		return gaXtype.getXImportDeclarationAccess();
	}
	
	public ParserRule getXImportDeclarationRule() {
		return getXImportDeclarationAccess().getRule();
	}

	//QualifiedNameInStaticImport:
	//	(ValidID '.')+;
	public XtypeGrammarAccess.QualifiedNameInStaticImportElements getQualifiedNameInStaticImportAccess() {
		return gaXtype.getQualifiedNameInStaticImportAccess();
	}
	
	public ParserRule getQualifiedNameInStaticImportRule() {
		return getQualifiedNameInStaticImportAccess().getRule();
	}

	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '$' | '_') ('a'..'z' | 'A'..'Z' | '$' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaXtype.getIDRule();
	} 

	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"'? | "'" ('\\' . | !('\\' | "'"))* "'"?;
	public TerminalRule getSTRINGRule() {
		return gaXtype.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaXtype.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaXtype.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaXtype.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaXtype.getANY_OTHERRule();
	} 
}
